<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>煎饼的博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jianbing.github.io/"/>
  <updated>2016-07-11T15:45:08.452Z</updated>
  <id>http://jianbing.github.io/</id>
  
  <author>
    <name>煎饼</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>命令行工具2.0版</title>
    <link href="http://jianbing.github.io/2016/07/11/cmd-tool/"/>
    <id>http://jianbing.github.io/2016/07/11/cmd-tool/</id>
    <published>2016-07-10T16:00:00.000Z</published>
    <updated>2016-07-11T15:45:08.452Z</updated>
    
    <content type="html">&lt;h3 id=&quot;起源&quot;&gt;&lt;a href=&quot;#起源&quot; class=&quot;headerlink&quot; title=&quot;起源&quot;&gt;&lt;/a&gt;起源&lt;/h3&gt;&lt;p&gt;随着在工作中逐渐积累了不少测试脚本，需要对脚本们进行归类整合，目前发现3种可行方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Web界面&lt;/li&gt;
&lt;li&gt;GUI界面&lt;/li&gt;
&lt;li&gt;命令行界面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Web界面可以使用Flask框架来搭建，GUI界面可以使用TK，PyQT，wxPython等GUI库来编写，从学习成本来说，命令行界面是最容易上手，这一篇我们来聊一聊命令行界面的实现。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;整理需求&quot;&gt;&lt;a href=&quot;#整理需求&quot; class=&quot;headerlink&quot; title=&quot;整理需求&quot;&gt;&lt;/a&gt;整理需求&lt;/h3&gt;&lt;p&gt;我的需求其实还是比较简单的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多个命令可以随时调整顺序，方便在中间加入新的命令&lt;/li&gt;
&lt;li&gt;支持快捷键操作&lt;/li&gt;
&lt;li&gt;不需要做命令行参数解析，因为我都没打算用参数~偷笑~&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以目前希望的运行效果是：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;请选择指令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;，备份apk，hotkey:b&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;，屏幕截图，hotkey:s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;，获取屏幕分辨率，hotkey:r&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Make a choice&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;实现过程&quot;&gt;&lt;a href=&quot;#实现过程&quot; class=&quot;headerlink&quot; title=&quot;实现过程&quot;&gt;&lt;/a&gt;实现过程&lt;/h3&gt;&lt;p&gt;其实，Python标准库里边，argparse可以用于解析命令行参数和选项。出色的第三方库有docopt，Click等。不过介于自己的需要并不复杂，那就造个轮子吧~&lt;/p&gt;
&lt;p&gt;在之前，有写过一个&lt;a href=&quot;https://github.com/jianbing/hexo-cmd-tool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo-cmd-tool&lt;/a&gt;，现在看起来使用方式还是麻烦了，于是基于它进行了改造。新增了一个装饰器cmdline来简化使用。&lt;/p&gt;
&lt;p&gt;先看一个使用的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#! /usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: UTF-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; utils.tools.cmd &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; cmdline, CmdCenter&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@cmdline(&#39;hexo generate&#39;, &#39;g&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hexo_g&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.system(&lt;span class=&quot;string&quot;&gt;&#39;hexo g&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@cmdline(&#39;hexo server&#39;, &#39;s&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hexo_s&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.system(&lt;span class=&quot;string&quot;&gt;&#39;hexo s&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@cmdline(&#39;hexo version&#39;, &#39;v&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hexo_v&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.system(&lt;span class=&quot;string&quot;&gt;&#39;hexo v&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@cmdline(&#39;hexo deploy&#39;, &#39;d&#39;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hexo_d&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.system(&lt;span class=&quot;string&quot;&gt;&#39;hexo d&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&quot;__main__&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    CmdCenter.work()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用效果：&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;请选择指令&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;，hexo generate，hotkey:g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;，hexo server，hotkey:s&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;，hexo version，hotkey:v&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;，hexo deploy，hotkey:d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Make a choice&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;原理非常简单，利用装饰器的特性，在加载函数对象的时候，把函数加多一层封装转存起来。&lt;/p&gt;
&lt;p&gt;源码：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;开发环境：Python2.7+Win10+Pycharm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#! /usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unicode_literals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; collections &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; OrderedDict&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_Cmd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, func, title, hotkey=None, args=None)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.__func = func&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.__title = title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.__hotkey = hotkey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.__args = args&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; self.__args:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.__func(*self.__args)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.__func()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    @property&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hotkey&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.__hotkey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;    @property&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.__title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_CmdCenter&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cmds = OrderedDict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cmds_hotkey = dict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;add_cmd&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self, cmd)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        self.cmds[str(len(self.cmds) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)] = cmd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; cmd.hotkey:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; cmd.hotkey &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self.cmds_hotkey:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;\n热键冲突,&amp;#123;0&amp;#125;和&amp;#123;1&amp;#125;&quot;&lt;/span&gt;.format(cmd.title, self.cmds_hotkey[cmd.hotkey].title)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.cmds_hotkey[cmd.hotkey] = cmd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;show_cmds&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self.cmds:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;0&amp;#125;，&amp;#123;1&amp;#125;，hotkey:&amp;#123;2&amp;#125;&#39;&lt;/span&gt;.format(key, self.cmds[key].title, self.cmds[key].hotkey)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_choice&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        choice = raw_input(&lt;span class=&quot;string&quot;&gt;&quot;Make a choice\n&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; choice&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;try&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;-&#39;&lt;/span&gt; * &lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;请选择指令\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                self.show_cmds()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    choice = self.get_choice()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; choice &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self.cmds &lt;span class=&quot;keyword&quot;&gt;and&lt;/span&gt; choice &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self.cmds_hotkey:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;选择错误，重新选择&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; choice &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; self.cmds:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    self.cmds[choice].run()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    self.cmds_hotkey[choice].run()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;\n执行完成\n&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;except&lt;/span&gt; KeyboardInterrupt:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;手动退出&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CmdCenter = _CmdCenter()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;cmdline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(title, hotkey=None)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_cmdline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(func)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CmdCenter.add_cmd(_Cmd(func, title, hotkey))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__cmdline&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(*args, **kwargs)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; func(*args, **kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; __cmdline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _cmdline&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;起源&quot;&gt;&lt;a href=&quot;#起源&quot; class=&quot;headerlink&quot; title=&quot;起源&quot;&gt;&lt;/a&gt;起源&lt;/h3&gt;&lt;p&gt;随着在工作中逐渐积累了不少测试脚本，需要对脚本们进行归类整合，目前发现3种可行方案：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Web界面&lt;/li&gt;
&lt;li&gt;GUI界面&lt;/li&gt;
&lt;li&gt;命令行界面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Web界面可以使用Flask框架来搭建，GUI界面可以使用TK，PyQT，wxPython等GUI库来编写，从学习成本来说，命令行界面是最容易上手，这一篇我们来聊一聊命令行界面的实现。&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏测试" scheme="http://jianbing.github.io/tags/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="python" scheme="http://jianbing.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Unity一键发版脚本折腾记（Windows版）</title>
    <link href="http://jianbing.github.io/2016/07/08/unity-auto-build-windows/"/>
    <id>http://jianbing.github.io/2016/07/08/unity-auto-build-windows/</id>
    <published>2016-07-07T16:00:00.000Z</published>
    <updated>2016-07-09T16:24:15.002Z</updated>
    
    <content type="html">&lt;h3 id=&quot;脚本起源&quot;&gt;&lt;a href=&quot;#脚本起源&quot; class=&quot;headerlink&quot; title=&quot;脚本起源&quot;&gt;&lt;/a&gt;脚本起源&lt;/h3&gt;&lt;p&gt;策划：煎饼啊，给我一个最新的电脑版~&lt;br&gt;煎饼：好~&lt;/p&gt;
&lt;p&gt;于是，开始手动发版，操作步骤如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行Unity，把平台切换到Windows&lt;/li&gt;
&lt;li&gt;去到项目代码文件夹里边，先还原代码，再拉取最新代码&lt;/li&gt;
&lt;li&gt;手动把测试模块拖动到主场景的Main Camera上&lt;/li&gt;
&lt;li&gt;在工具面板点击打包资源按钮（开发提供）&lt;/li&gt;
&lt;li&gt;在工具面板点击发版按钮（开发提供）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;偶尔会忘记拉取最新代码，偶尔会忘记打包资源，最重要的是，这发版步骤还是略繁琐，于是懒人症发作，开始探索如何脚本化这个过程。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;探索过程&quot;&gt;&lt;a href=&quot;#探索过程&quot; class=&quot;headerlink&quot; title=&quot;探索过程&quot;&gt;&lt;/a&gt;探索过程&lt;/h3&gt;&lt;p&gt;这些步骤分为两类操作。&lt;/p&gt;
&lt;p&gt;一类是Unity外的操作，如还原，拉取代码，这个可以用Python解决。&lt;/p&gt;
&lt;p&gt;一类是Unity内的操作，切换平台，打包资源，进行发版。这些操作，外部工具不好直接介入，最好的方式是Unity提供了命令行的操作形式，搜索了下，果然是有，研究了下，找到了几个可用的参数。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-batchmode  在批处理模式下运行，不会弹出Unity窗口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-quit  其他命令执行完毕后将退出Unity编辑器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-logFile &amp;lt;pathname&amp;gt;  指定输出Log文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-executeMethod &amp;lt;ClassName.MethodName&amp;gt;  在Unity启动的同时会执行指定的静态方法，注意，这个类所在文件目录，需要在Editor目录下（自己建一个Editor目录也行）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终调用命令如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unity.exe -quit -batchmode -executeMethod CMDTool.BuildWindows -logFile C:\build\log.log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;更多参数点击查看&lt;a href=&quot;http://docs.unity3d.com/Manual/CommandLineArguments.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;实现过程&quot;&gt;&lt;a href=&quot;#实现过程&quot; class=&quot;headerlink&quot; title=&quot;实现过程&quot;&gt;&lt;/a&gt;实现过程&lt;/h3&gt;&lt;h4 id=&quot;Unity发版的工具类&quot;&gt;&lt;a href=&quot;#Unity发版的工具类&quot; class=&quot;headerlink&quot; title=&quot;Unity发版的工具类&quot;&gt;&lt;/a&gt;Unity发版的工具类&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;using UnityEngine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using UnityEditor;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using UnityEditor.SceneManagement;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using Assets.Src.Editor.Toolkit.Tools;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class CMDTool &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void BuildWindows() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SwitchPlatform(BuildTarget.StandaloneWindows);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        CheckTestManager();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SGTools.BuildAssetBundles(EditorUserBuildSettings.activeBuildTarget, true);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        SGTools.Build(EditorUserBuildSettings.activeBuildTarget);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void SwitchPlatform(BuildTarget target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (EditorUserBuildSettings.activeBuildTarget != target) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            EditorUserBuildSettings.SwitchActiveBuildTarget(target);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void CheckTestManager() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        EditorSceneManager.OpenScene(&quot;Assets/Scene/Main.unity&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (GameObject.Find(&quot;Main Camera&quot;).GetComponent&amp;lt;TestCenter.TestManager&amp;gt;().IsNull()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GameObject.Find(&quot;Main Camera&quot;).AddComponent&amp;lt;TestCenter.TestManager&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;SwitchPlatform 切换平台&lt;br&gt;CheckTestManager 加载测试模块&lt;br&gt;SGTools.BuildAssetBundles 开发提供的打包资源方法&lt;br&gt;SGTools.Build  开发提供的发版方法&lt;/p&gt;
&lt;h4 id=&quot;还原，拉取项目代码&quot;&gt;&lt;a href=&quot;#还原，拉取项目代码&quot; class=&quot;headerlink&quot; title=&quot;还原，拉取项目代码&quot;&gt;&lt;/a&gt;还原，拉取项目代码&lt;/h4&gt;&lt;p&gt;为什么要还原？因为每次发版都会注入测试模块，下次发版前拉取新代码的时候，会出现冲突。&lt;/p&gt;
&lt;p&gt;可以使用Python来调用Git命令：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;update_unity_code&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.chdir(&lt;span class=&quot;string&quot;&gt;&quot;C:\Project\sg&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;start to reset&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.system(&lt;span class=&quot;string&quot;&gt;&quot;git reset --hard HEAD&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;start to pull&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.system(&lt;span class=&quot;string&quot;&gt;&quot;git pull&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;检查Unity是否已经关闭&quot;&gt;&lt;a href=&quot;#检查Unity是否已经关闭&quot; class=&quot;headerlink&quot; title=&quot;检查Unity是否已经关闭&quot;&gt;&lt;/a&gt;检查Unity是否已经关闭&lt;/h4&gt;&lt;p&gt;调用Unity命令行发版之前，需要确认Unity没有开启，否则运行会报错。&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;check_unity_is_close&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; psutil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; psutil.process_iter():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i.name() == &lt;span class=&quot;string&quot;&gt;&quot;Unity.exe&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;raise&lt;/span&gt; Exception(&lt;span class=&quot;string&quot;&gt;&quot;unity is not close&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;unity is close&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;检查发版的Log文件，是否有报错信息&quot;&gt;&lt;a href=&quot;#检查发版的Log文件，是否有报错信息&quot; class=&quot;headerlink&quot; title=&quot;检查发版的Log文件，是否有报错信息&quot;&gt;&lt;/a&gt;检查发版的Log文件，是否有报错信息&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;analyze_log&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;start to analyze log&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(&lt;span class=&quot;string&quot;&gt;r&quot;C:\build\log.log&quot;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i.find(&lt;span class=&quot;string&quot;&gt;&quot;error&quot;&lt;/span&gt;) &amp;gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;发版函数&quot;&gt;&lt;a href=&quot;#发版函数&quot; class=&quot;headerlink&quot; title=&quot;发版函数&quot;&gt;&lt;/a&gt;发版函数&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;build_windows&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;start to build windows&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.chdir(&lt;span class=&quot;string&quot;&gt;r&quot;C:\Program Files\Unity\Editor&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p = subprocess.Popen(&lt;span class=&quot;string&quot;&gt;r&quot;Unity.exe -quit -batchmode -executeMethod CMDTool.BuildWindows -logFile C:\build\log.log&quot;&lt;/span&gt;, stdout=subprocess.PIPE, stderr=subprocess.PIPE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    stdout, stderr = p.communicate()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; stderr&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;result code is &amp;#123;&amp;#125;&quot;&lt;/span&gt;.format(p.returncode)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;最终运行&quot;&gt;&lt;a href=&quot;#最终运行&quot; class=&quot;headerlink&quot; title=&quot;最终运行&quot;&gt;&lt;/a&gt;最终运行&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start_time = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    check_unity_is_close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    update_unity_code()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    build_windows()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    analyze_log()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;finish in &amp;#123;&amp;#125; seconds.&#39;&lt;/span&gt;.format(time.time() - start_time)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;脚本起源&quot;&gt;&lt;a href=&quot;#脚本起源&quot; class=&quot;headerlink&quot; title=&quot;脚本起源&quot;&gt;&lt;/a&gt;脚本起源&lt;/h3&gt;&lt;p&gt;策划：煎饼啊，给我一个最新的电脑版~&lt;br&gt;煎饼：好~&lt;/p&gt;
&lt;p&gt;于是，开始手动发版，操作步骤如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行Unity，把平台切换到Windows&lt;/li&gt;
&lt;li&gt;去到项目代码文件夹里边，先还原代码，再拉取最新代码&lt;/li&gt;
&lt;li&gt;手动把测试模块拖动到主场景的Main Camera上&lt;/li&gt;
&lt;li&gt;在工具面板点击打包资源按钮（开发提供）&lt;/li&gt;
&lt;li&gt;在工具面板点击发版按钮（开发提供）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;偶尔会忘记拉取最新代码，偶尔会忘记打包资源，最重要的是，这发版步骤还是略繁琐，于是懒人症发作，开始探索如何脚本化这个过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="测试工具" scheme="http://jianbing.github.io/tags/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>在Pycharm中配置autopep8</title>
    <link href="http://jianbing.github.io/2016/06/29/pycharm-autopep8/"/>
    <id>http://jianbing.github.io/2016/06/29/pycharm-autopep8/</id>
    <published>2016-06-28T16:00:00.000Z</published>
    <updated>2016-07-09T16:24:42.932Z</updated>
    
    <content type="html">&lt;h3 id=&quot;关于PEP-8&quot;&gt;&lt;a href=&quot;#关于PEP-8&quot; class=&quot;headerlink&quot; title=&quot;关于PEP 8&quot;&gt;&lt;/a&gt;关于PEP 8&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PEP 8&lt;/a&gt;，Style Guide for Python Code，是Python官方推出的Python编码风格的约定，虽然这不是硬性的规定，但是如果Python程序员都尽量遵循这个文档，那么编码风格的统一会让代码的可读性大大提升。&lt;/p&gt;
&lt;p&gt;在Pycharm里边默认也是有进行PEP8的检测，强迫症的人表示，看到代码中有黄色波浪线，就一定得先改好它。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;关于autopep8&quot;&gt;&lt;a href=&quot;#关于autopep8&quot; class=&quot;headerlink&quot; title=&quot;关于autopep8&quot;&gt;&lt;/a&gt;关于autopep8&lt;/h3&gt;&lt;p&gt;官网的描述是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;autopep8 automatically formats Python code to conform to the PEP 8 style guide. It uses the pep8 utility to determine what parts of the code needs to be formatted. autopep8 is capable of fixing most of the formatting issues that can be reported by pep8.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过它，可以修复大部分PEP8工具中报告的代码排版问题。举个官网的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;example1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;####This is a long comment. This should be wrapped to fit within 72 characters.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    some_tuple=(   &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    some_variable=&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;long&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;Long code lines should be wrapped within 79 characters.&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;other&#39;&lt;/span&gt;:[math.pi, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9876543210&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;This is a long string that goes on&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;more&#39;&lt;/span&gt;:&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;inner&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;This whole logical line should be wrapped.&#39;&lt;/span&gt;,some_tuple:[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;40000&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;500000000&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;60000000000000000&lt;/span&gt;]&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (some_tuple, some_variable)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是一个比较极端情况的例子，在使用了autopep8自动修复后：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;example1&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# This is a long comment. This should be wrapped to fit within 72 characters.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    some_tuple = (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;a&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    some_variable = &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;long&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;Long code lines should be wrapped within 79 characters.&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &lt;span class=&quot;string&quot;&gt;&#39;other&#39;&lt;/span&gt;: [math.pi, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9876543210&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;This is a long string that goes on&#39;&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                     &lt;span class=&quot;string&quot;&gt;&#39;more&#39;&lt;/span&gt;: &amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;inner&#39;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&#39;This whole logical line should be wrapped.&#39;&lt;/span&gt;, some_tuple: [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                                                  &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;40000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;500000000&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;60000000000000000&lt;/span&gt;]&amp;#125;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (some_tuple, some_variable)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是不是看起来焕然一新了？&lt;/p&gt;
&lt;h3 id=&quot;Pycharm中使用autopep8作为扩展工具&quot;&gt;&lt;a href=&quot;#Pycharm中使用autopep8作为扩展工具&quot; class=&quot;headerlink&quot; title=&quot;Pycharm中使用autopep8作为扩展工具&quot;&gt;&lt;/a&gt;Pycharm中使用autopep8作为扩展工具&lt;/h3&gt;&lt;h4 id=&quot;安装autopep8&quot;&gt;&lt;a href=&quot;#安装autopep8&quot; class=&quot;headerlink&quot; title=&quot;安装autopep8&quot;&gt;&lt;/a&gt;安装autopep8&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install autopep8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Pycharm进行设置&quot;&gt;&lt;a href=&quot;#Pycharm进行设置&quot; class=&quot;headerlink&quot; title=&quot;Pycharm进行设置&quot;&gt;&lt;/a&gt;Pycharm进行设置&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Settings–&amp;gt;Tools–&amp;gt;External Tools 点击添加按钮&lt;ul&gt;
&lt;li&gt;Name：autopep8（可以自定义）&lt;/li&gt;
&lt;li&gt;Tools settings:&lt;/li&gt;
&lt;li&gt;Programs：autopep8（不能修改）&lt;/li&gt;
&lt;li&gt;Parameters：--in-place --aggressive --aggressive $FilePath$&lt;/li&gt;
&lt;li&gt;Working directory：$ProjectFileDir$&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;点击Output Files&lt;ul&gt;
&lt;li&gt;点击添加，名称可以任意填写&lt;/li&gt;
&lt;li&gt;Regular expression to match output：$FILE_PATH$\:$LINE$\:$COLUMN$\:.*&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;实际使用&quot;&gt;&lt;a href=&quot;#实际使用&quot; class=&quot;headerlink&quot; title=&quot;实际使用&quot;&gt;&lt;/a&gt;实际使用&lt;/h4&gt;&lt;p&gt;在右击上代码–&amp;gt;External Tool–&amp;gt;autopep8&lt;/p&gt;
&lt;p&gt;Pycharm自动调用了autopep8对当前文件进行PEP8优化。&lt;/p&gt;
&lt;h3 id=&quot;autopep8的一些设置点&quot;&gt;&lt;a href=&quot;#autopep8的一些设置点&quot; class=&quot;headerlink&quot; title=&quot;autopep8的一些设置点&quot;&gt;&lt;/a&gt;autopep8的一些设置点&lt;/h3&gt;&lt;p&gt;在上边说到，在Parameters的设置是:--in-place --aggressive --aggressive $FilePath$&lt;/p&gt;
&lt;p&gt;–in-place 代表会直接修改源文件&lt;/p&gt;
&lt;p&gt;–aggressive autopep8默认只修复空白，对齐相关的PEP8问题，加入--aggressive设置，会增加修复如 x == None 修复为 x is None，{“a”: 1, “b”: 2}.has_key(‘a’) 修复为’a’ in {“a”: 1, “b”: 2}&lt;/p&gt;
&lt;p&gt;–ignore  忽略PEP8检查项&lt;/p&gt;
&lt;p&gt;因为我只打算用autopep8来修复空格，空行这一类的排版问题，同时要忽略每一行长度过长的检测（E501 - Try to make lines fit within –max-line-length characters.），所以最终设置是：&lt;/p&gt;
&lt;p&gt;--in-place   --ignore=E501  $FilePath$ &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;关于PEP-8&quot;&gt;&lt;a href=&quot;#关于PEP-8&quot; class=&quot;headerlink&quot; title=&quot;关于PEP 8&quot;&gt;&lt;/a&gt;关于PEP 8&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;PEP 8&lt;/a&gt;，Style Guide for Python Code，是Python官方推出的Python编码风格的约定，虽然这不是硬性的规定，但是如果Python程序员都尽量遵循这个文档，那么编码风格的统一会让代码的可读性大大提升。&lt;/p&gt;
&lt;p&gt;在Pycharm里边默认也是有进行PEP8的检测，强迫症的人表示，看到代码中有黄色波浪线，就一定得先改好它。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://jianbing.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>游戏自动化测试之辅助工具篇</title>
    <link href="http://jianbing.github.io/2016/06/13/game-test-automation-1/"/>
    <id>http://jianbing.github.io/2016/06/13/game-test-automation-1/</id>
    <published>2016-06-12T16:00:00.000Z</published>
    <updated>2016-06-30T13:12:51.792Z</updated>
    
    <content type="html">&lt;p&gt;说到游戏的自动化测试，很多人脑海中第一个浮现出来的词语，我想是UI自动化和接口自动化这两个的其中之一吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自动化测试是把以人为驱动的测试行为转化为机器执行的一种过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;除了UI和接口自动化测试，我们也可以将测试工作中的重复性内容，编写成脚本或工具，可以反复使用，提升工作的效率。&lt;/p&gt;
&lt;p&gt;今天就来聊一聊测试辅助工具的开发吧。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;懒人思维&quot;&gt;&lt;a href=&quot;#懒人思维&quot; class=&quot;headerlink&quot; title=&quot;懒人思维&quot;&gt;&lt;/a&gt;懒人思维&lt;/h3&gt;&lt;p&gt;首次，要做一个“懒测试”。对于工作中的重复性内容，不能一味地允许自己重复再重复，我们需要解放自己的双手，更高效地完成工作任务。&lt;/p&gt;
&lt;p&gt;通过分析重复性工作是否可以形成规律性的步骤，开始编写测试工具脚本，首先网上搜索是否已经有靠谱的解决方案（毕竟重复造轮子也是对时间的消耗），如果有，直接用即可，如果没有，那就自己造轮子呗。&lt;/p&gt;
&lt;p&gt;对测试脚本的公共功能抽取出来，封装后加入到公共测试库里边，方便之后的复用。&lt;/p&gt;
&lt;h3 id=&quot;编程语言的选择&quot;&gt;&lt;a href=&quot;#编程语言的选择&quot; class=&quot;headerlink&quot; title=&quot;编程语言的选择&quot;&gt;&lt;/a&gt;编程语言的选择&lt;/h3&gt;&lt;p&gt;其实主流语言都是不错的选择，用自己熟悉的语言即可。&lt;/p&gt;
&lt;p&gt;权衡之下，我选择了Python，主要原因有以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;容易上手，在测试人员之间更容易推广。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;强悍的标准库和海量的第三方库，想到的实现方式往往已经有成熟的轮子了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;和编译型语言相比，相同的功能少写好多代码，开发效率高。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Python作为一门出色的胶水语言，可以和C#，java联合使用。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;实践起来&quot;&gt;&lt;a href=&quot;#实践起来&quot; class=&quot;headerlink&quot; title=&quot;实践起来&quot;&gt;&lt;/a&gt;实践起来&lt;/h3&gt;&lt;p&gt;举几个例子吧。&lt;/p&gt;
&lt;h4 id=&quot;查看内网发版时间&quot;&gt;&lt;a href=&quot;#查看内网发版时间&quot; class=&quot;headerlink&quot; title=&quot;查看内网发版时间&quot;&gt;&lt;/a&gt;查看内网发版时间&lt;/h4&gt;&lt;p&gt;有时候问开发，最近一次内网服务端发版是什么时候？开发回答：有点忘记了。。&lt;/p&gt;
&lt;p&gt;那就得自力更生了~&lt;/p&gt;
&lt;p&gt;原始方式：使用FTP软件连入内网服务器，查看文件的更新日期，从而知道发版时间。&lt;/p&gt;
&lt;p&gt;懒人方式：那就写个脚本吧。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sftp = SFTPClient(host=&lt;span class=&quot;string&quot;&gt;&quot;192.168.1.10&quot;&lt;/span&gt;, port=&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;, user=&lt;span class=&quot;string&quot;&gt;&quot;root&quot;&lt;/span&gt;, pwd=&lt;span class=&quot;string&quot;&gt;&quot;XXXXXX&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;内网发版时间是：&amp;#123;&amp;#125;&quot;&lt;/span&gt;.format(sftp.get_file_update_time(path=&lt;span class=&quot;string&quot;&gt;&#39;/data/www/sg/sg_dev/socket/conf/config/treasure&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sftp.close()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;SFTPClient&lt;a href=&quot;https://github.com/jianbing/utils/blob/master/tools/sftpclient.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击查看源码&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;批量更新SVN目录&quot;&gt;&lt;a href=&quot;#批量更新SVN目录&quot; class=&quot;headerlink&quot; title=&quot;批量更新SVN目录&quot;&gt;&lt;/a&gt;批量更新SVN目录&lt;/h4&gt;&lt;p&gt;有2个常用的SVN目录，一个策划文档目录，一个配置表目录，每天来到公司，都需要，先Revert，再Update。&lt;/p&gt;
&lt;p&gt;懒人方式：几行代码实现批量操作。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#! /usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: UTF-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unicode_literals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; subprocess&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subprocess.Popen(&lt;span class=&quot;string&quot;&gt;r&#39;TortoiseProc.exe /command:revert /path:&quot;E:\策划文档&quot; /closeonend:0&#39;&lt;/span&gt;.encode(&lt;span class=&quot;string&quot;&gt;&#39;gb2312&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subprocess.Popen(&lt;span class=&quot;string&quot;&gt;r&#39;TortoiseProc.exe /command:revert /path:&quot;E:\配置文档&quot; /closeonend:0&#39;&lt;/span&gt;.encode(&lt;span class=&quot;string&quot;&gt;&#39;gb2312&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subprocess.Popen(&lt;span class=&quot;string&quot;&gt;r&#39;TortoiseProc.exe /command:update /path:&quot;E:\策划文档&quot; /closeonend:0&#39;&lt;/span&gt;.encode(&lt;span class=&quot;string&quot;&gt;&#39;gb2312&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subprocess.Popen(&lt;span class=&quot;string&quot;&gt;r&#39;TortoiseProc.exe /command:update /path:&quot;E:\配置文档&quot; /closeonend:0&#39;&lt;/span&gt;.encode(&lt;span class=&quot;string&quot;&gt;&#39;gb2312&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;之前分享的一些例子&quot;&gt;&lt;a href=&quot;#之前分享的一些例子&quot; class=&quot;headerlink&quot; title=&quot;之前分享的一些例子&quot;&gt;&lt;/a&gt;之前分享的一些例子&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jianbing.github.io/2016/06/06/unity-pic-check/&quot;&gt;Unity图片压缩设置批量检查&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jianbing.github.io/2016/03/08/check-player-name/&quot;&gt;测试游戏取名库&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jianbing.github.io/2016/03/05/search-content-in-files/&quot;&gt;在文件夹内查找指定文本&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://jianbing.github.io/2016/04/27/adb-tool/&quot;&gt;ADB工具类分享&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;说到游戏的自动化测试，很多人脑海中第一个浮现出来的词语，我想是UI自动化和接口自动化这两个的其中之一吧。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;自动化测试是把以人为驱动的测试行为转化为机器执行的一种过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;除了UI和接口自动化测试，我们也可以将测试工作中的重复性内容，编写成脚本或工具，可以反复使用，提升工作的效率。&lt;/p&gt;
&lt;p&gt;今天就来聊一聊测试辅助工具的开发吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="测试工具" scheme="http://jianbing.github.io/tags/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Unity图片压缩设置批量检查</title>
    <link href="http://jianbing.github.io/2016/06/06/unity-pic-check/"/>
    <id>http://jianbing.github.io/2016/06/06/unity-pic-check/</id>
    <published>2016-06-05T16:00:00.000Z</published>
    <updated>2016-06-30T14:42:09.407Z</updated>
    
    <content type="html">&lt;h3 id=&quot;检查点整理&quot;&gt;&lt;a href=&quot;#检查点整理&quot; class=&quot;headerlink&quot; title=&quot;检查点整理&quot;&gt;&lt;/a&gt;检查点整理&lt;/h3&gt;&lt;p&gt;合理的设置可以减少内存的占用，以我们游戏的安卓平台为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;美术输出的图片资源，分辨率最大不超过1024*1024&lt;/li&gt;
&lt;li&gt;在Unity中，Max Size设置为1024&lt;/li&gt;
&lt;li&gt;Format设置为Compressed&lt;/li&gt;
&lt;li&gt;Compression Quality设置为Best&lt;/li&gt;
&lt;li&gt;勾选Compress using ETC1&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;脚本实现&quot;&gt;&lt;a href=&quot;#脚本实现&quot; class=&quot;headerlink&quot; title=&quot;脚本实现&quot;&gt;&lt;/a&gt;脚本实现&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;开发环境：Python2.7+Win10+Pycharm&lt;/p&gt;
&lt;p&gt;美术输出的图片资源，分辨率最大不超过1024*1024&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这一项可以使用Python的Pillow库，来获取图片的分辨率。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;get_files_by_suffix&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(path, suffixes=&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;string&quot;&gt;&quot;txt&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;xml&quot;&lt;/span&gt;)&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    file_list = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; root, dirs, files &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; os.walk(path):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; afile &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; files:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            file_suffix = os.path.splitext(afile)[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:].lower()   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; file_suffix &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; suffixes:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                file_list.append(os.path.join(root, afile))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; file_list&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pic = get_files_by_suffix(&lt;span class=&quot;string&quot;&gt;&quot;C:\Project\sg\sg\Assets\Res\zh-CN&quot;&lt;/span&gt;, (&lt;span class=&quot;string&quot;&gt;&#39;jpg&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;png&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; pic:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p = Image.open(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    x, y = p.size&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p.close()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x != y:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;size不相等&amp;#123;&amp;#125;*&amp;#123;&amp;#125;&#39;&lt;/span&gt;.format(x, y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; x &amp;gt; &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; y &amp;gt; &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;size大于1024&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;在Unity中，Max Size设置为1024&lt;br&gt;Format设置为Compressed&lt;br&gt;Compression Quality设置为Best&lt;br&gt;勾选Compress using ETC1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这里可以有两种实现方式：&lt;/p&gt;
&lt;h4 id=&quot;Python方式&quot;&gt;&lt;a href=&quot;#Python方式&quot; class=&quot;headerlink&quot; title=&quot;Python方式&quot;&gt;&lt;/a&gt;Python方式&lt;/h4&gt;&lt;p&gt;通过读取图片的meta文件，检查文件中的以下设置是否正确。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- buildTarget: Android&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    maxTextureSize: &lt;span class=&quot;number&quot;&gt;2048&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    textureFormat: &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    compressionQuality: &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    allowsAlphaSplitting: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;C-方式&quot;&gt;&lt;a href=&quot;#C-方式&quot; class=&quot;headerlink&quot; title=&quot;C#方式&quot;&gt;&lt;/a&gt;C#方式&lt;/h4&gt;&lt;p&gt;通过Unity的api，读取相应的设置，进行检查。核心代码如下：&lt;/p&gt;
&lt;p&gt;pic变量是图片的路径，如 @”Assets/Res/zh-CN/Battle/Texture/BG/BG_001.jpg”&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TextureImporter ti = AssetImporter.GetAtPath(pic) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; TextureImporter;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int maxSize = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;TextureImporterFormat format;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int compressionQuality = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ti.GetPlatformTextureSettings(&lt;span class=&quot;string&quot;&gt;&quot;Android&quot;&lt;/span&gt;, out maxSize, out format, out compressionQuality);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Debug.LogWarning(string.Format(&lt;span class=&quot;string&quot;&gt;&quot;strat to check &amp;#123;0&amp;#125;&quot;&lt;/span&gt;,pic));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (maxSize != &lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Debug.LogError(string.Format(&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;0&amp;#125;,max size is not 1024,now is &amp;#123;1&amp;#125;&quot;&lt;/span&gt;, pic, maxSize));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(format != TextureImporterFormat.AutomaticCompressed) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Debug.LogError(string.Format(&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;0&amp;#125;,format is not compressed,now is &amp;#123;1&amp;#125;&quot;&lt;/span&gt;, pic, format));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (compressionQuality != &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Debug.LogError(string.Format(&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;0&amp;#125;,compression quality is not best,now is &amp;#123;1&amp;#125;&quot;&lt;/span&gt;, pic, compressionQuality.ToString()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(pic.ToLower().IndexOf(&lt;span class=&quot;string&quot;&gt;&quot;png&quot;&lt;/span&gt;) &amp;gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!ti.GetAllowsAlphaSplitting()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Debug.LogError(string.Format(&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;0&amp;#125;,compress using ETC1 is not true&quot;&lt;/span&gt;, pic));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;检查点整理&quot;&gt;&lt;a href=&quot;#检查点整理&quot; class=&quot;headerlink&quot; title=&quot;检查点整理&quot;&gt;&lt;/a&gt;检查点整理&lt;/h3&gt;&lt;p&gt;合理的设置可以减少内存的占用，以我们游戏的安卓平台为例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;美术输出的图片资源，分辨率最大不超过1024*1024&lt;/li&gt;
&lt;li&gt;在Unity中，Max Size设置为1024&lt;/li&gt;
&lt;li&gt;Format设置为Compressed&lt;/li&gt;
&lt;li&gt;Compression Quality设置为Best&lt;/li&gt;
&lt;li&gt;勾选Compress using ETC1&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="测试工具" scheme="http://jianbing.github.io/tags/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>在Python中使用Sikuli</title>
    <link href="http://jianbing.github.io/2016/05/21/sikuli-tool/"/>
    <id>http://jianbing.github.io/2016/05/21/sikuli-tool/</id>
    <published>2016-05-20T16:00:00.000Z</published>
    <updated>2016-06-30T14:27:30.735Z</updated>
    
    <content type="html">&lt;h3 id=&quot;关于Sikuli&quot;&gt;&lt;a href=&quot;#关于Sikuli&quot; class=&quot;headerlink&quot; title=&quot;关于Sikuli&quot;&gt;&lt;/a&gt;关于Sikuli&lt;/h3&gt;&lt;p&gt;Sikuli 是由 MIT 的研究团队发布的新型图形化编程技术。它以图像检索技术为基础，提供了一套基于 Jython 的脚本语言以及集成开发环境。使用者可利用屏幕截图直接引用 GUI 元素进行编程，完成交互操作。Sikuli 一词取自墨西哥 Huichol Indian 土著语，意为“上帝之眼”， Sikuli 让电脑能像人一样“看”这个“真实世界”。&lt;/p&gt;
&lt;p&gt;通过Sikuli自带的IDE，操作简单，容易上手，可以编写出非常具备可读性的代码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/sikuli-tool/sikuli.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用起来，也有一些不足：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有代码提示，要一边翻看api，一边写&lt;/li&gt;
&lt;li&gt;调试功能比较弱&lt;/li&gt;
&lt;li&gt;无法在现有的代码里边，直接集成sikuli的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;也试过用Eclipse+Pydev来导入sikuli的jar包，使用jython驱动，但因为现有的代码都是在python下编写的，所以这个方式虽然可以脱离Sikuli的IDE，但是并不理想。&lt;/p&gt;
&lt;h3 id=&quot;Sikuli-in-Python&quot;&gt;&lt;a href=&quot;#Sikuli-in-Python&quot; class=&quot;headerlink&quot; title=&quot;Sikuli in Python&quot;&gt;&lt;/a&gt;Sikuli in Python&lt;/h3&gt;&lt;p&gt;直到前几天逛Github，发现了&lt;a href=&quot;https://github.com/kevlened/sikuli_cpython&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sikuli_cpython&lt;/a&gt;这个项目，启发了我，原理是&lt;a href=&quot;https://github.com/kivy/pyjnius&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pyjnius&lt;/a&gt;提供了可以从Python中直接访问java类的功能，通过它，实现了对Sikuli的jar包的一层封装。&lt;/p&gt;
&lt;p&gt;先看看pyjnius的一个官方例子：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; jnius &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; autoclass&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;autoclass(&lt;span class=&quot;string&quot;&gt;&#39;java.lang.System&#39;&lt;/span&gt;).out.println(&lt;span class=&quot;string&quot;&gt;&#39;Hello world&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;Stack = autoclass(&lt;span class=&quot;string&quot;&gt;&#39;java.util.Stack&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;stack = Stack()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;stack.push(&lt;span class=&quot;string&quot;&gt;&#39;hello&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;stack.push(&lt;span class=&quot;string&quot;&gt;&#39;world&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; stack.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;world&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; stack.pop()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hello&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;开始动手~&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;开发环境：Python2.7+Win10+Pycharm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;相关依赖&quot;&gt;&lt;a href=&quot;#相关依赖&quot; class=&quot;headerlink&quot; title=&quot;相关依赖&quot;&gt;&lt;/a&gt;相关依赖&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Cython&lt;/li&gt;
&lt;li&gt;pyjnius&lt;/li&gt;
&lt;li&gt;JDK&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;环境变量需要配置JAVA_HOME&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/sikuli-tool/java_home.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Path里边，需要加入jvm.dll所在目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/sikuli-tool/path.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;效果展示&quot;&gt;&lt;a href=&quot;#效果展示&quot; class=&quot;headerlink&quot; title=&quot;效果展示&quot;&gt;&lt;/a&gt;效果展示&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;例子1：把图标拖动到文件夹中，最后高亮这个文件夹，并双击它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; sikulitool.sikuli &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = Screen()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.dragDrop(&lt;span class=&quot;string&quot;&gt;&quot;as.png&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;dir.png&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.sleep(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.dragDrop(&lt;span class=&quot;string&quot;&gt;&quot;qq.png&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;dir.png&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s.find(&lt;span class=&quot;string&quot;&gt;&quot;dir.png&quot;&lt;/span&gt;).highlight().sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).doubleClick()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/images/sikuli-tool/drag.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例子2：通过similar方法设置相似度，默认是0.7，在屏幕中查找多个相似度为50%的对象，并依次高亮，移动到上边。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; sikulitool.sikuli &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;s = Screen()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; s.findAll(Pattern(&lt;span class=&quot;string&quot;&gt;&#39;doc.png&#39;&lt;/span&gt;).similar(&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;)):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    i.highlight().sleep(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;).hover()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/images/sikuli-tool/findall.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;源码已在&lt;a href=&quot;https://github.com/jianbing/sikulitool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;，欢迎围观~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;关于Sikuli&quot;&gt;&lt;a href=&quot;#关于Sikuli&quot; class=&quot;headerlink&quot; title=&quot;关于Sikuli&quot;&gt;&lt;/a&gt;关于Sikuli&lt;/h3&gt;&lt;p&gt;Sikuli 是由 MIT 的研究团队发布的新型图形化编程技术。它以图像检索技术为基础，提供了一套基于 Jython 的脚本语言以及集成开发环境。使用者可利用屏幕截图直接引用 GUI 元素进行编程，完成交互操作。Sikuli 一词取自墨西哥 Huichol Indian 土著语，意为“上帝之眼”， Sikuli 让电脑能像人一样“看”这个“真实世界”。&lt;/p&gt;
&lt;p&gt;通过Sikuli自带的IDE，操作简单，容易上手，可以编写出非常具备可读性的代码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/sikuli-tool/sikuli.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用起来，也有一些不足：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有代码提示，要一边翻看api，一边写&lt;/li&gt;
&lt;li&gt;调试功能比较弱&lt;/li&gt;
&lt;li&gt;无法在现有的代码里边，直接集成sikuli的功能&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://jianbing.github.io/tags/python/"/>
    
      <category term="测试工具" scheme="http://jianbing.github.io/tags/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>用Python制作一个迷你快捷键工具</title>
    <link href="http://jianbing.github.io/2016/05/13/mini-hotkey-tool/"/>
    <id>http://jianbing.github.io/2016/05/13/mini-hotkey-tool/</id>
    <published>2016-05-12T16:00:00.000Z</published>
    <updated>2016-06-30T14:45:11.732Z</updated>
    
    <content type="html">&lt;h3 id=&quot;工具起源&quot;&gt;&lt;a href=&quot;#工具起源&quot; class=&quot;headerlink&quot; title=&quot;工具起源&quot;&gt;&lt;/a&gt;工具起源&lt;/h3&gt;&lt;p&gt;有时候在群里看到一个新鲜的名词，想要搜索一下是个什么东东，一般流程是：复制文本，打开浏览器，粘贴到搜索框，回车。&lt;/p&gt;
&lt;p&gt;有时候看到一个电影名称，想快速在豆瓣电影看下评分，一般流程是：复制文本，打开豆瓣电影，粘贴，点击搜索。&lt;/p&gt;
&lt;p&gt;在记录bug的时候，需要把截图拖动到上传控件上，经常需要在屏幕下方一堆已经打开的文件夹中，找到截图的文件夹。&lt;/p&gt;
&lt;p&gt;如果这些事情，可以用快捷键来快速完成就好了。于是开始查找资料~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;实现原理&quot;&gt;&lt;a href=&quot;#实现原理&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h3&gt;&lt;p&gt;通过对鼠标和键盘事件的监控，如果按下的组合键满足已经设置的快捷键组合，就执行指定的函数代码。&lt;/p&gt;
&lt;h3 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;headerlink&quot; title=&quot;环境搭建&quot;&gt;&lt;/a&gt;环境搭建&lt;/h3&gt;&lt;p&gt;需要安装以下的库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sourceforge.net/projects/pywin32/files/pywin32/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pywin32&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/#pyhook&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pyhook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/schurpf/pyhk&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pyhk&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;pyperclip，查看剪贴板数据，通过pip安装即可&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;开发环境：Python2.7+Win10+Pycharm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#! /usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: UTF-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; pyhk &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pyhk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; subprocess&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pyperclip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;CONST_LIEBAO_DIR = &lt;span class=&quot;string&quot;&gt;r&quot;C:\Users\Bing\AppData\Local\liebao\liebao.exe&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;open_shot_dir&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.system(&lt;span class=&quot;string&quot;&gt;r&quot;start  C:\Users\Bing\Desktop\shot&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search_douban_movie&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    copy_str = pyperclip.paste().strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    subprocess.Popen((&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;0&amp;#125; https://movie.douban.com/subject_search?search_text=&amp;#123;1&amp;#125;&#39;&lt;/span&gt;.format(CONST_LIEBAO_DIR, copy_str.encode(&lt;span class=&quot;string&quot;&gt;&#39;gb2312&#39;&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search_baidu&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    copy_str = pyperclip.paste().strip()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    subprocess.Popen((&lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;0&amp;#125; https://www.baidu.com/s?wd=&amp;#123;1&amp;#125;&#39;&lt;/span&gt;.format(CONST_LIEBAO_DIR, copy_str.encode(&lt;span class=&quot;string&quot;&gt;&#39;gb2312&#39;&lt;/span&gt;))))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;start working&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hot = pyhk()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hot.addHotkey([&lt;span class=&quot;string&quot;&gt;&#39;mouse left&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;S&#39;&lt;/span&gt;], open_shot_dir)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hot.addHotkey([&lt;span class=&quot;string&quot;&gt;&#39;mouse left&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;D&#39;&lt;/span&gt;], search_douban_movie)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hot.addHotkey([&lt;span class=&quot;string&quot;&gt;&#39;mouse left&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;B&#39;&lt;/span&gt;], search_baidu)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hot.start()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;工具起源&quot;&gt;&lt;a href=&quot;#工具起源&quot; class=&quot;headerlink&quot; title=&quot;工具起源&quot;&gt;&lt;/a&gt;工具起源&lt;/h3&gt;&lt;p&gt;有时候在群里看到一个新鲜的名词，想要搜索一下是个什么东东，一般流程是：复制文本，打开浏览器，粘贴到搜索框，回车。&lt;/p&gt;
&lt;p&gt;有时候看到一个电影名称，想快速在豆瓣电影看下评分，一般流程是：复制文本，打开豆瓣电影，粘贴，点击搜索。&lt;/p&gt;
&lt;p&gt;在记录bug的时候，需要把截图拖动到上传控件上，经常需要在屏幕下方一堆已经打开的文件夹中，找到截图的文件夹。&lt;/p&gt;
&lt;p&gt;如果这些事情，可以用快捷键来快速完成就好了。于是开始查找资料~&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://jianbing.github.io/tags/python/"/>
    
      <category term="测试工具" scheme="http://jianbing.github.io/tags/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Unity游戏内显示报错信息</title>
    <link href="http://jianbing.github.io/2016/05/07/unity-show-error-tool/"/>
    <id>http://jianbing.github.io/2016/05/07/unity-show-error-tool/</id>
    <published>2016-05-06T16:00:00.000Z</published>
    <updated>2016-05-14T00:14:50.193Z</updated>
    
    <content type="html">&lt;p&gt;忙碌的五月份开始咯~最近刚好做了一个Unity的显示报错工具，就分享出来吧~&lt;/p&gt;
&lt;h3 id=&quot;工具起源&quot;&gt;&lt;a href=&quot;#工具起源&quot; class=&quot;headerlink&quot; title=&quot;工具起源&quot;&gt;&lt;/a&gt;工具起源&lt;/h3&gt;&lt;p&gt;Unity游戏导出的PC版本，默认情况下是看不到报错信息的，为了方便测试人员查看报错信息，定位Bug的归属，于是有了下边这个小工具。&lt;/p&gt;
&lt;p&gt;先看效果图吧。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;/images/unity-show-error-tool/pic1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以设置开始监听，停止监听，清空记录。&lt;/p&gt;
&lt;p&gt;可以查看到报错的详细堆栈信息。&lt;/p&gt;
&lt;h3 id=&quot;实现原理&quot;&gt;&lt;a href=&quot;#实现原理&quot; class=&quot;headerlink&quot; title=&quot;实现原理&quot;&gt;&lt;/a&gt;实现原理&lt;/h3&gt;&lt;p&gt;简单来说，是这样的~&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Unity提供了一个事件，Application.logMessageReceived，可以在接收到log信息的时候触发自定义log处理函数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在log处理函数里边，将log存储起来。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;制作一个窗口，负责显示已经存储的log信息。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;直接上代码吧~&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;using System.Collections.Generic;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using UnityEngine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;namespace TestCenter.Utils &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public class ShowError : MonoBehaviour &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        static List&amp;lt;string&amp;gt; ErrorMsgs = new List&amp;lt;string&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bool ShowWindow = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        bool Record = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Rect UIRect = new Rect(0, Screen.height / 2, Screen.width, Screen.height / 2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Vector2 ScrollPosition = Vector2.zero;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        void Start() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        void OnGUI() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (ShowWindow) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if (GUI.Button(new Rect(0, (Screen.height / 3 + 90), 50, 30), &amp;quot;隐藏&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ShowWindow = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if (GUI.Button(new Rect(0, (Screen.height / 3 + 90), 50, 30), &amp;quot;显示&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ShowWindow = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (ShowWindow) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                UIRect = GUI.Window(1, UIRect, ErrorWindowFunc, &amp;quot;Log监听&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        void ErrorWindowFunc(int windowID) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GUI.DragWindow(new Rect(0, 0, UIRect.width, 30));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GUI.Box(new Rect(0, 0, UIRect.width, UIRect.height), &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GUILayout.BeginArea(new Rect(5, 20, UIRect.width - 10, UIRect.height));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ScrollPosition = GUILayout.BeginScrollView(ScrollPosition, GUILayout.Width(UIRect.width - 10), GUILayout.Height(UIRect.height - 60));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GUILayout.BeginVertical();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            foreach (var Log in ErrorMsgs) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                GUILayout.Label(Log);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GUILayout.EndVertical();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GUILayout.EndScrollView();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GUILayout.BeginHorizontal();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (Record) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if (GUILayout.Button(&amp;quot;停止监听&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    Application.logMessageReceived -= HandleLog;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    Record = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                if (GUILayout.Button(&amp;quot;监听Log&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    Application.logMessageReceived += HandleLog;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    Record = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (GUILayout.Button(&amp;quot;清空记录&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ErrorMsgs.Clear();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GUILayout.EndHorizontal();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            GUILayout.EndArea();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        void Update() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        void HandleLog(string log, string trace, LogType type) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            if (type.Equals(LogType.Error) || type.Equals(LogType.Exception)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ErrorMsgs.Add(log);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ErrorMsgs.Add(trace);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;将脚本直接挂在主场景的Main Camera即可使用，源码已在&lt;a href=&quot;https://github.com/jianbing/UnityTestTool&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;忙碌的五月份开始咯~最近刚好做了一个Unity的显示报错工具，就分享出来吧~&lt;/p&gt;
&lt;h3 id=&quot;工具起源&quot;&gt;&lt;a href=&quot;#工具起源&quot; class=&quot;headerlink&quot; title=&quot;工具起源&quot;&gt;&lt;/a&gt;工具起源&lt;/h3&gt;&lt;p&gt;Unity游戏导出的PC版本，默认情况下是看不到报错信息的，为了方便测试人员查看报错信息，定位Bug的归属，于是有了下边这个小工具。&lt;/p&gt;
&lt;p&gt;先看效果图吧。&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏测试" scheme="http://jianbing.github.io/tags/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="测试工具" scheme="http://jianbing.github.io/tags/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>使用Next主题遇到的一个坑</title>
    <link href="http://jianbing.github.io/2016/04/30/set-up-next/"/>
    <id>http://jianbing.github.io/2016/04/30/set-up-next/</id>
    <published>2016-04-29T16:00:00.000Z</published>
    <updated>2016-04-30T09:46:57.096Z</updated>
    
    <content type="html">&lt;p&gt;昨天晚上睡前，打算把博客的主题，替换成Next，&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Next的Github地址&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;对着Next的使用文档就开始进行配置，到了最终执行Hexo g来生成博客文章的时候，报错了！！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Unhandled rejection Error: ENOENT: no such file &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; directory, open &lt;span class=&quot;string&quot;&gt;&#39;C:\github\blog\themes\next\layout\_scripts\schemes\.swig&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Error (native)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Object.fs.openSync (fs.js:&lt;span class=&quot;number&quot;&gt;584&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Object.fs.readFileSync (fs.js:&lt;span class=&quot;number&quot;&gt;431&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Object.ret.load (C:\github\blog\node_modules\swig\lib\loaders\filesystem.js:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at compileFile (C:\github\blog\node_modules\swig\lib\swig.js:&lt;span class=&quot;number&quot;&gt;695&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at Object.eval [&lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; tpl] (eval at &amp;lt;anonymous&amp;gt; (C:\github\blog\node_modules\swig\lib\swig.js:&lt;span class=&quot;number&quot;&gt;498&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;), &amp;lt;anonymous&amp;gt;:&lt;span class=&quot;number&quot;&gt;293&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at compiled [&lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; _compiledSync] (C:\github\blog\node_modules\swig\lib\swig.js:&lt;span class=&quot;number&quot;&gt;619&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at tryCatcher (C:\github\blog\node_modules\bluebird\js\release\util.js:&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at null._compiled (C:\github\blog\node_modules\bluebird\js\release\method.js:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at View.render (C:\github\blog\node_modules\hexo\lib\theme\view.js:&lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at C:\github\blog\node_modules\hexo\lib\hexo\index.js:&lt;span class=&quot;number&quot;&gt;387&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at tryCatcher (C:\github\blog\node_modules\bluebird\js\release\util.js:&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at C:\github\blog\node_modules\bluebird\js\release\method.js:&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at RouteStream._read (C:\github\blog\node_modules\hexo\lib\hexo\router.js:&lt;span class=&quot;number&quot;&gt;134&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at RouteStream.Readable.read (_stream_readable.js:&lt;span class=&quot;number&quot;&gt;336&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at resume_ (_stream_readable.js:&lt;span class=&quot;number&quot;&gt;726&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at _combinedTickCallback (node.js:&lt;span class=&quot;number&quot;&gt;383&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    at process._tickCallback (node.js:&lt;span class=&quot;number&quot;&gt;407&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;no such file or directory？？&lt;/p&gt;
&lt;p&gt;好吧，谷歌大法出动，一番搜索下来，找到了&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next/issues/737&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这个帖子&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;里边说到：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有碰到 YAMLException: bad indentation of a mapping entry 这种提示的，最好找个 YAML Lint 验证下 _config.yml 是否有问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;往回翻看报错信息，还真有这个报错，那有可能是配置格式出错了。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;YAMLException: can &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; read a block mapping entry; a multiline key may &lt;span class=&quot;keyword&quot;&gt;not&lt;/span&gt; be an implicit key at line &lt;span class=&quot;number&quot;&gt;144&lt;/span&gt;, column &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# Table Of Contents in the Sidebar&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;回到配置文件，在144行的上边，发现是少了一个空格。。&lt;/p&gt;
&lt;p&gt;这个是错误的版本：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;avatar:/images/avatar.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个是正确的版本：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;avatar: /images/avatar.png&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;问题解决，PS：Next主题的效果很合胃口啊~哈哈。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;昨天晚上睡前，打算把博客的主题，替换成Next，&lt;a href=&quot;https://github.com/iissnan/hexo-theme-next&quot;&gt;Next的Github地址&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;对着Next的使用文档就开始进行配置，到了最终执行Hexo g来生成博客文章的时候，报错了！！&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂" scheme="http://jianbing.github.io/tags/%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title>ADB工具类分享</title>
    <link href="http://jianbing.github.io/2016/04/27/adb-tool/"/>
    <id>http://jianbing.github.io/2016/04/27/adb-tool/</id>
    <published>2016-04-26T16:00:00.000Z</published>
    <updated>2016-04-30T07:22:22.450Z</updated>
    
    <content type="html">&lt;p&gt;之前封装了一批基于adb命令的函数，用于辅助游戏安卓版本的测试，&lt;a href=&quot;https://github.com/jianbing/utils/blob/master/android.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;源码在此&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;虽然已经比较方便了，但是在使用过程中，还是存在一些不足。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不支持同时连接多部手机&lt;/li&gt;
&lt;li&gt;不支持adb通过wifi连接手机&lt;/li&gt;
&lt;li&gt;部分函数的写法不太合理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;周末的时候，重新封装了一个ADB工具类，把之前的函数整合进去。来看看怎么使用吧~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;连接手机&quot;&gt;&lt;a href=&quot;#连接手机&quot; class=&quot;headerlink&quot; title=&quot;连接手机&quot;&gt;&lt;/a&gt;连接手机&lt;/h3&gt;&lt;p&gt;USB方式&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb = ADB()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Wifi方式，手机需要安装adbWireless，在手机端启动后，查看当前手机的IP&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb = ADB(adb_remote=&lt;span class=&quot;string&quot;&gt;&#39;192.168.1.120&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;常用功能&quot;&gt;&lt;a href=&quot;#常用功能&quot; class=&quot;headerlink&quot; title=&quot;常用功能&quot;&gt;&lt;/a&gt;常用功能&lt;/h3&gt;&lt;p&gt;屏幕截图，保存到指定目录，可以在截图的文件名中添加附加信息&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb.screenshot(&lt;span class=&quot;string&quot;&gt;r&quot;E:\shot&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;screenshot&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看当前运行的程序信息&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; adb.current_package_name()   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; adb.current_activity_name()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看程序的CPU和内存占用情况&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; adb.get_mem_using(adb.current_package_name())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; adb.get_cpu_using(adb.current_activity_name())&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;备份和自动安装APK&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb.backup_current_apk()  &lt;span class=&quot;comment&quot;&gt;# 备份当前正在运行的APK&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb.auto_install(&lt;span class=&quot;string&quot;&gt;r&quot;E:\apks&quot;&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;# 自动安装指定目录的全部APK文件，如果已经安装，则先卸载后再进行安装&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行adb和adb shell命令&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; adb.adb(&lt;span class=&quot;string&quot;&gt;&#39;devices&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; adb.adb_shell(&lt;span class=&quot;string&quot;&gt;&#39;dumpsys cpuinfo&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开调试模式，会打印每一次执行的adb命令，以及返回的结果&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb = ADB(debug=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;更多的功能&quot;&gt;&lt;a href=&quot;#更多的功能&quot; class=&quot;headerlink&quot; title=&quot;更多的功能&quot;&gt;&lt;/a&gt;更多的功能&lt;/h3&gt;&lt;p&gt;自己去源码中发现吧，&lt;a href=&quot;https://github.com/jianbing/utils/blob/master/tools/adb.py&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击查看&lt;/a&gt;。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;之前封装了一批基于adb命令的函数，用于辅助游戏安卓版本的测试，&lt;a href=&quot;https://github.com/jianbing/utils/blob/master/android.py&quot;&gt;源码在此&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;虽然已经比较方便了，但是在使用过程中，还是存在一些不足。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不支持同时连接多部手机&lt;/li&gt;
&lt;li&gt;不支持adb通过wifi连接手机&lt;/li&gt;
&lt;li&gt;部分函数的写法不太合理&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;周末的时候，重新封装了一个ADB工具类，把之前的函数整合进去。来看看怎么使用吧~&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏测试" scheme="http://jianbing.github.io/tags/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%95/"/>
    
      <category term="python" scheme="http://jianbing.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>安卓性能专项之CPU内存篇</title>
    <link href="http://jianbing.github.io/2016/04/23/cpu-memory/"/>
    <id>http://jianbing.github.io/2016/04/23/cpu-memory/</id>
    <published>2016-04-22T16:00:00.000Z</published>
    <updated>2016-04-27T13:54:47.535Z</updated>
    
    <content type="html">&lt;p&gt;对手游进行测试的时候，需要留意游戏在各种常见场景下CPU，内存的使用情况。&lt;/p&gt;
&lt;p&gt;空闲状态的场景，比如主城界面待机，游戏Home到后台运行。&lt;/p&gt;
&lt;p&gt;高负荷状态的场景，比如多人同屏，连续的战斗场景等。&lt;/p&gt;
&lt;p&gt;怎么去获取当前的CPU，内存占用情况呢？有两个比较常用的方式：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h4 id=&quot;APP性能测试工具&quot;&gt;&lt;a href=&quot;#APP性能测试工具&quot; class=&quot;headerlink&quot; title=&quot;APP性能测试工具&quot;&gt;&lt;/a&gt;APP性能测试工具&lt;/h4&gt;&lt;p&gt;第三方的APP性能测试工具：GT，Wetest，Emmagee等。&lt;/p&gt;
&lt;p&gt;使用方式：各APP的帮助文件已经详细说明了~不再重复~&lt;/p&gt;
&lt;h3 id=&quot;adb方式&quot;&gt;&lt;a href=&quot;#adb方式&quot; class=&quot;headerlink&quot; title=&quot;adb方式&quot;&gt;&lt;/a&gt;adb方式&lt;/h3&gt;&lt;h4 id=&quot;查看CPU占用&quot;&gt;&lt;a href=&quot;#查看CPU占用&quot; class=&quot;headerlink&quot; title=&quot;查看CPU占用&quot;&gt;&lt;/a&gt;查看CPU占用&lt;/h4&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb  shell dumpsys cpuinfo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以看到类似的结果:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CPU usage &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;16749&lt;/span&gt;ms to &lt;span class=&quot;number&quot;&gt;1803&lt;/span&gt;ms ago:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;24&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;15167&lt;/span&gt;/com.supercell.clashroyale.qihoo: &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;% kernel / faults: &lt;span class=&quot;number&quot;&gt;504&lt;/span&gt; minor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;7.8&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;2146&lt;/span&gt;/surfaceflinger: &lt;span class=&quot;number&quot;&gt;3.3&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;4.4&lt;/span&gt;% kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;16479&lt;/span&gt;/com.qihoo.daemon: &lt;span class=&quot;number&quot;&gt;2.5&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;% kernel / faults: &lt;span class=&quot;number&quot;&gt;267&lt;/span&gt; minor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ......&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;2867&lt;/span&gt;/com.android.phone: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;2937&lt;/span&gt;/com.meizu.cloud: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;3499&lt;/span&gt;/sogou.mobile.explorer.hotwords: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;3641&lt;/span&gt;/com.android.settings: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;14666&lt;/span&gt;/com.github.uiautomator: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;15156&lt;/span&gt;/ksoftirqd/&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;15218&lt;/span&gt;/com.jedigames.qh360:QRemote: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% kernel / faults: &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; minor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;31582&lt;/span&gt;/wpa_supplicant: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% kernel&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9.4&lt;/span&gt;% TOTAL: &lt;span class=&quot;number&quot;&gt;7.3&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;% kernel + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% iowait + &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;% softirq&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;可以通过指定游戏包名来减少显示的结果，以最近在玩的皇室战争为例：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb  shell dumpsys cpuinfo |findstr &lt;span class=&quot;string&quot;&gt;&quot;com.supercell.clashroyale.qihoo TOTAL&quot;&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;# 查找包含com.supercell.clashroyale.qihoo或者TOTAL的行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显示的结果减少为:&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;% &lt;span class=&quot;number&quot;&gt;15167&lt;/span&gt;/com.supercell.clashroyale.qihoo: &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;4.8&lt;/span&gt;% kernel / faults: &lt;span class=&quot;number&quot;&gt;28531&lt;/span&gt; minor &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt; major&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;% TOTAL: &lt;span class=&quot;number&quot;&gt;7.8&lt;/span&gt;% user + &lt;span class=&quot;number&quot;&gt;3.3&lt;/span&gt;% kernel + &lt;span class=&quot;number&quot;&gt;0.7&lt;/span&gt;% iowait + &lt;span class=&quot;number&quot;&gt;0.1&lt;/span&gt;% softirq&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里表示：当前CPU总占用为12%，com.supercell.clashroyale.qihoo（皇室战争）的CPU占用为12%*33%=3.96%&lt;/p&gt;
&lt;h3 id=&quot;查看内存占用&quot;&gt;&lt;a href=&quot;#查看内存占用&quot; class=&quot;headerlink&quot; title=&quot;查看内存占用&quot;&gt;&lt;/a&gt;查看内存占用&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb shell dumpsys meminfo com.supercell.clashroyale.qihoo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到以下信息：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Applications Memory Usage (kB):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Uptime: &lt;span class=&quot;number&quot;&gt;79407732&lt;/span&gt; Realtime: &lt;span class=&quot;number&quot;&gt;700252674&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;** MEMINFO &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; pid &lt;span class=&quot;number&quot;&gt;18040&lt;/span&gt; [com.supercell.clashroyale.qihoo] **&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   Pss  Private  Private  Swapped     Heap     Heap     Heap&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 Total    Dirty    Clean    Dirty     Size    Alloc     Free&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ------   ------   ------   ------   ------   ------   ------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Native Heap        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;106160&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;52209&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;262&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  Dalvik Heap    &lt;span class=&quot;number&quot;&gt;13819&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;13380&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;67460&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;29143&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;38317&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Dalvik Other     &lt;span class=&quot;number&quot;&gt;4046&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;3976&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Stack      &lt;span class=&quot;number&quot;&gt;344&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;344&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Ashmem      &lt;span class=&quot;number&quot;&gt;138&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;128&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Other dev    &lt;span class=&quot;number&quot;&gt;85959&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;3032&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;82852&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     .so mmap     &lt;span class=&quot;number&quot;&gt;5421&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;1016&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;2200&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .jar mmap        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .apk mmap     &lt;span class=&quot;number&quot;&gt;1414&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;1232&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .ttf mmap      &lt;span class=&quot;number&quot;&gt;655&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;428&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .dex mmap     &lt;span class=&quot;number&quot;&gt;4206&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;     &lt;span class=&quot;number&quot;&gt;2632&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Other mmap       &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;       &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      Unknown    &lt;span class=&quot;number&quot;&gt;42884&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;42876&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TOTAL   &lt;span class=&quot;number&quot;&gt;158951&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;64808&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;89356&lt;/span&gt;        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;   &lt;span class=&quot;number&quot;&gt;173620&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;81352&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;38579&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Objects&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               Views:      &lt;span class=&quot;number&quot;&gt;137&lt;/span&gt;         ViewRootImpl:        &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         AppContexts:        &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;           Activities:        &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              Assets:        &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;        AssetManagers:        &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       Local Binders:       &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;        Proxy Binders:       &lt;span class=&quot;number&quot;&gt;44&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Death Recipients:       &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     OpenSSL Sockets:        &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; SQL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         MEMORY_USED:        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  PAGECACHE_OVERFLOW:        &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;          MALLOC_SIZE:       &lt;span class=&quot;number&quot;&gt;62&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里表示：当前的应用，内存总占用是158951KB&lt;/p&gt;
&lt;p&gt;PS：几个内存相关的术语，一般关注PSS。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;VSS - Virtual Set Size 虚拟耗用内存（包含共享库占用的内存）&lt;br&gt;RSS - Resident Set Size 实际使用物理内存（包含共享库占用的内存）&lt;br&gt;PSS - Proportional Set Size 实际使用的物理内存（比例分配共享库占用的内存）&lt;br&gt;USS - Unique Set Size 进程独自占用的物理内存（不包含共享库占用的内存）&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;对手游进行测试的时候，需要留意游戏在各种常见场景下CPU，内存的使用情况。&lt;/p&gt;
&lt;p&gt;空闲状态的场景，比如主城界面待机，游戏Home到后台运行。&lt;/p&gt;
&lt;p&gt;高负荷状态的场景，比如多人同屏，连续的战斗场景等。&lt;/p&gt;
&lt;p&gt;怎么去获取当前的CPU，内存占用情况呢？有两个比较常用的方式：&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏测试" scheme="http://jianbing.github.io/tags/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>一键关闭迅雷后台程序</title>
    <link href="http://jianbing.github.io/2016/04/21/kill_thunderPlatform/"/>
    <id>http://jianbing.github.io/2016/04/21/kill_thunderPlatform/</id>
    <published>2016-04-20T16:00:00.000Z</published>
    <updated>2016-06-30T14:43:57.253Z</updated>
    
    <content type="html">&lt;p&gt;退出了迅雷后，有时候会发现它还是在悄悄地上传，占用着带宽，在任务管理器里边查看，是一个叫ThunderPlatform.exe的程序。&lt;/p&gt;
&lt;p&gt;百度了下，很多解决方案都是禁用XLServicePlatform服务。&lt;/p&gt;
&lt;p&gt;这里分享一个用Python来自动关闭ThunderPlatform.exe的方式，需要用到一个库，叫psutil。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install psutil 安装即可&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;代码如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;开发环境：Python2.7+Win10+Pycharm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#! /usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: UTF-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unicode_literals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; psutil&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;num = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;checking,times:&amp;#123;&amp;#125;&quot;&lt;/span&gt;.format(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; psutil.process_iter():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i.name() == &lt;span class=&quot;string&quot;&gt;&quot;ThunderPlatform.exe&quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;find ThunderPlatform.exe,start to kill&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            i.kill()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;finish kill&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;not found,sleep 60s&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    num += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;退出了迅雷后，有时候会发现它还是在悄悄地上传，占用着带宽，在任务管理器里边查看，是一个叫ThunderPlatform.exe的程序。&lt;/p&gt;
&lt;p&gt;百度了下，很多解决方案都是禁用XLServicePlatform服务。&lt;/p&gt;
&lt;p&gt;这里分享一个用Python来自动关闭ThunderPlatform.exe的方式，需要用到一个库，叫psutil。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pip install psutil 安装即可&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://jianbing.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>检查端口占用情况</title>
    <link href="http://jianbing.github.io/2016/04/20/kill_5037/"/>
    <id>http://jianbing.github.io/2016/04/20/kill_5037/</id>
    <published>2016-04-19T16:00:00.000Z</published>
    <updated>2016-06-30T14:42:28.332Z</updated>
    
    <content type="html">&lt;p&gt;使用adb的时候，有时候会发现5037端口被其他程序占用了。于是有了以下这个脚本，检查端口被占用的情况，并结束该进程。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;开发环境：Python2.7+Win10+Pycharm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#! /usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: UTF-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unicode_literals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; os&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;is_port_used&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(port=&lt;span class=&quot;number&quot;&gt;5037&lt;/span&gt;, kill=False)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cmd = &lt;span class=&quot;string&quot;&gt;&#39;netstat -ano | findstr &amp;#123;&amp;#125; | findstr  LISTENING&#39;&lt;/span&gt;.format(port)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; cmd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    result = os.popen(cmd).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; result != &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pid = result.split()[&lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;tasklist /FI &quot;PID eq &amp;#123;0&amp;#125;&#39;&lt;/span&gt;.format(pid)).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; result&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        position = result.rfind(&lt;span class=&quot;string&quot;&gt;&#39;=====&#39;&lt;/span&gt;.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        program_name = result[position+&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;:].split()[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;占用的程序是&amp;#123;&amp;#125;&quot;&lt;/span&gt;.format(program_name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = os.popen(&lt;span class=&quot;string&quot;&gt;&#39;wmic process where name=&quot;&amp;#123;0&amp;#125;&quot; get executablepath&#39;&lt;/span&gt;.format(program_name)).read()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        result = result.split()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;占用的程序所在位置：&amp;#123;&amp;#125;&quot;&lt;/span&gt;.format(result[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        cmd = &lt;span class=&quot;string&quot;&gt;&quot;explorer &amp;#123;0&amp;#125;&quot;&lt;/span&gt;.format(os.path.dirname(result[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        os.popen(cmd)  &lt;span class=&quot;comment&quot;&gt;# 打开所在文件夹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; kill:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            os.popen(&lt;span class=&quot;string&quot;&gt;&quot;taskkill /F /PID &amp;#123;0&amp;#125;&quot;&lt;/span&gt;.format(pid))   &lt;span class=&quot;comment&quot;&gt;# 结束进程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;&amp;#123;&amp;#125;端口没有被占用&#39;&lt;/span&gt;.format(port)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    is_port_used()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    input()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;netstat -ano | findstr &lt;span class=&quot;number&quot;&gt;5037&lt;/span&gt; | findstr  LISTENING&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TCP    &lt;span class=&quot;number&quot;&gt;127.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.1&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;5037&lt;/span&gt;         &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;.0&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;              LISTENING       &lt;span class=&quot;number&quot;&gt;16600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;映像名称                       PID 会话名              会话&lt;span class=&quot;comment&quot;&gt;#       内存使用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;========================= ======== ================ =========== ============&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb.exe                      &lt;span class=&quot;number&quot;&gt;16600&lt;/span&gt; Console                    &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;      &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;868&lt;/span&gt; K&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;占用的程序是adb.exe&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;占用的程序所在位置：C:\Android\sdk\platform-tools\adb.exe&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用adb的时候，有时候会发现5037端口被其他程序占用了。于是有了以下这个脚本，检查端口被占用的情况，并结束该进程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://jianbing.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>计算Python函数的运行时间</title>
    <link href="http://jianbing.github.io/2016/04/15/count-pyfunc-running-time/"/>
    <id>http://jianbing.github.io/2016/04/15/count-pyfunc-running-time/</id>
    <published>2016-04-14T16:00:00.000Z</published>
    <updated>2016-05-14T00:14:50.191Z</updated>
    
    <content type="html">&lt;p&gt;有时候需要计算一下函数的时间，可以有以下的几种方式：&lt;/p&gt;
&lt;h3 id=&quot;简单粗暴式&quot;&gt;&lt;a href=&quot;#简单粗暴式&quot; class=&quot;headerlink&quot; title=&quot;简单粗暴式&quot;&gt;&lt;/a&gt;简单粗暴式&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; time.time() - start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;简单粗暴式的升级版&quot;&gt;&lt;a href=&quot;#简单粗暴式的升级版&quot; class=&quot;headerlink&quot; title=&quot;简单粗暴式的升级版&quot;&gt;&lt;/a&gt;简单粗暴式的升级版&lt;/h3&gt;&lt;p&gt;使用装饰器&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;count_running_time&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(func)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_count_running_time&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(*args, **kwargs)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        start = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        res = func(*args, **kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(&lt;span class=&quot;string&quot;&gt;&#39;cost time :&amp;#123;0&amp;#125;&#39;&lt;/span&gt;.format(time.time() - start))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _count_running_time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@count_running_time&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以上两种方式，只能简单统计函数的总运行时间，如果函数复杂，需要分析里边调用的次数和耗时，则满足不了我们的需求。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;优雅的统计方式&quot;&gt;&lt;a href=&quot;#优雅的统计方式&quot; class=&quot;headerlink&quot; title=&quot;优雅的统计方式&quot;&gt;&lt;/a&gt;优雅的统计方式&lt;/h3&gt;&lt;p&gt;使用cProfile来进行统计，使用pstats来分析结果，直接看代码吧~&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;profile_func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(func)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; cProfile&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cProfile.run(&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;&amp;#125;()&quot;&lt;/span&gt;.format(func.func_name),&lt;span class=&quot;string&quot;&gt;&quot;prof.txt&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pstats&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p = pstats.Stats(&lt;span class=&quot;string&quot;&gt;&quot;prof.txt&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p.sort_stats(&lt;span class=&quot;string&quot;&gt;&quot;time&quot;&lt;/span&gt;).print_stats()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;hello world&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    time.sleep(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    profile_func(func)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打印如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hello world&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Sat Apr &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2016&lt;/span&gt;    prof.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; function calls &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;3.000&lt;/span&gt; seconds&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   Ordered by: internal time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ncalls  tottime  percall  cumtime  percall filename:lineno(function)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.000&lt;/span&gt; &amp;#123;time.sleep&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.000&lt;/span&gt; C:/Py27Project/testtools/local_test/__init__.py:&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;(func)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3.000&lt;/span&gt; &amp;lt;string&amp;gt;:&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;(&amp;lt;module&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;0.000&lt;/span&gt; &amp;#123;method &lt;span class=&quot;string&quot;&gt;&#39;disable&#39;&lt;/span&gt; of &lt;span class=&quot;string&quot;&gt;&#39;_lsprof.Profiler&#39;&lt;/span&gt; objects&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数调用的次数和耗时一目了然~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有时候需要计算一下函数的时间，可以有以下的几种方式：&lt;/p&gt;
&lt;h3 id=&quot;简单粗暴式&quot;&gt;&lt;a href=&quot;#简单粗暴式&quot; class=&quot;headerlink&quot; title=&quot;简单粗暴式&quot;&gt;&lt;/a&gt;简单粗暴式&lt;/h3&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; time&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    start = time.time()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    func()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; time.time() - start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://jianbing.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>安卓性能专项之FPS测试篇</title>
    <link href="http://jianbing.github.io/2016/04/13/unity-fps-tool/"/>
    <id>http://jianbing.github.io/2016/04/13/unity-fps-tool/</id>
    <published>2016-04-12T16:00:00.000Z</published>
    <updated>2016-07-08T12:15:27.227Z</updated>
    
    <content type="html">&lt;h3 id=&quot;FPS测试&quot;&gt;&lt;a href=&quot;#FPS测试&quot; class=&quot;headerlink&quot; title=&quot;FPS测试&quot;&gt;&lt;/a&gt;FPS测试&lt;/h3&gt;&lt;p&gt;FPS是每秒传输帧数(Frames Per Second)，每秒钟帧数越多，则画面看起来越流畅，FPS测试也是手机游戏性能测试的一个重点专项。&lt;/p&gt;
&lt;h3 id=&quot;测试工具&quot;&gt;&lt;a href=&quot;#测试工具&quot; class=&quot;headerlink&quot; title=&quot;测试工具&quot;&gt;&lt;/a&gt;测试工具&lt;/h3&gt;&lt;h4 id=&quot;APP性能测试工具&quot;&gt;&lt;a href=&quot;#APP性能测试工具&quot; class=&quot;headerlink&quot; title=&quot;APP性能测试工具&quot;&gt;&lt;/a&gt;APP性能测试工具&lt;/h4&gt;&lt;p&gt;第三方的APP性能测试工具，主流代表，GT，Wetest，Emmagee等。&lt;/p&gt;
&lt;p&gt;使用方式：各APP的帮助文件已经详细说明了~不再重复~&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;adb方式&quot;&gt;&lt;a href=&quot;#adb方式&quot; class=&quot;headerlink&quot; title=&quot;adb方式&quot;&gt;&lt;/a&gt;adb方式&lt;/h3&gt;&lt;p&gt;开发者选项–&amp;gt;GPU呈现模式分析–&amp;gt;使用adb shell dumpsys gfxinfo&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb shell dumpsys gfxinfo &lt;span class=&quot;string&quot;&gt;&quot;your app package name&quot;&lt;/span&gt; &amp;gt;fps.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看fps.txt，在Profile data in ms下方，查看刷新时间。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Unity手游并不适用这个方式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;使用WeTest查看FPS&quot;&gt;&lt;a href=&quot;#使用WeTest查看FPS&quot; class=&quot;headerlink&quot; title=&quot;使用WeTest查看FPS&quot;&gt;&lt;/a&gt;使用WeTest查看FPS&lt;/h3&gt;&lt;p&gt;鹅厂出品WeTest性能测试工具，可以实时计算出手游FPS，实测挺准的。推荐使用。&lt;/p&gt;
&lt;h3 id=&quot;Unity自制FPS显示工具&quot;&gt;&lt;a href=&quot;#Unity自制FPS显示工具&quot; class=&quot;headerlink&quot; title=&quot;Unity自制FPS显示工具&quot;&gt;&lt;/a&gt;Unity自制FPS显示工具&lt;/h3&gt;&lt;p&gt;我们也可以制作一个Unity专用的FPS显示工具，与Wetest相比，我们可以有更多的定制内容，比如加入帧数低于指定数字时，显示数字变成红色。&lt;/p&gt;
&lt;p&gt;工具原理：&lt;/p&gt;
&lt;p&gt;OnGUI方法是每帧调用的，使用一个变量，在每帧调用的时候自增，每隔一定时间统计帧数总量，总量除以累计的时间，就为每秒传输帧数FPS了，在Unity官网就有实例代码。&lt;/p&gt;
&lt;p&gt;使用方式：保存为ShowFPS.cs，直接挂在主场景的Main Camera即可。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;using UnityEngine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System.Collections;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class ShowFPS : MonoBehaviour &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public GUIStyle FPSStyle;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public float updateInterval = 0.5F;  //统计间隔&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private float lastInterval;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int frames = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private float fps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private int warnFPS = 40;   //FPS警告临界值&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void Start() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        lastInterval = Time.realtimeSinceStartup;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frames = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void OnGUI() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (fps &amp;lt; warnFPS) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FPSStyle.normal.textColor = Color.red;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            FPSStyle.normal.textColor = Color.white;               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GUI.Label(new Rect(5, 200, 80, 30), &amp;quot;FPS:&amp;quot; + fps.ToString(&amp;quot;f2&amp;quot;), FPSStyle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void Update() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ++frames;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (Time.realtimeSinceStartup &amp;gt; lastInterval + updateInterval) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fps = frames / (Time.realtimeSinceStartup - lastInterval);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frames = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            lastInterval = Time.realtimeSinceStartup;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;FPS测试&quot;&gt;&lt;a href=&quot;#FPS测试&quot; class=&quot;headerlink&quot; title=&quot;FPS测试&quot;&gt;&lt;/a&gt;FPS测试&lt;/h3&gt;&lt;p&gt;FPS是每秒传输帧数(Frames Per Second)，每秒钟帧数越多，则画面看起来越流畅，FPS测试也是手机游戏性能测试的一个重点专项。&lt;/p&gt;
&lt;h3 id=&quot;测试工具&quot;&gt;&lt;a href=&quot;#测试工具&quot; class=&quot;headerlink&quot; title=&quot;测试工具&quot;&gt;&lt;/a&gt;测试工具&lt;/h3&gt;&lt;h4 id=&quot;APP性能测试工具&quot;&gt;&lt;a href=&quot;#APP性能测试工具&quot; class=&quot;headerlink&quot; title=&quot;APP性能测试工具&quot;&gt;&lt;/a&gt;APP性能测试工具&lt;/h4&gt;&lt;p&gt;第三方的APP性能测试工具，主流代表，GT，Wetest，Emmagee等。&lt;/p&gt;
&lt;p&gt;使用方式：各APP的帮助文件已经详细说明了~不再重复~&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏测试" scheme="http://jianbing.github.io/tags/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>安卓性能专项之流量测试篇</title>
    <link href="http://jianbing.github.io/2016/04/10/network-traffic-test/"/>
    <id>http://jianbing.github.io/2016/04/10/network-traffic-test/</id>
    <published>2016-04-09T16:00:00.000Z</published>
    <updated>2016-04-27T13:54:47.539Z</updated>
    
    <content type="html">&lt;h3 id=&quot;从一个Bug说起&quot;&gt;&lt;a href=&quot;#从一个Bug说起&quot; class=&quot;headerlink&quot; title=&quot;从一个Bug说起&quot;&gt;&lt;/a&gt;从一个Bug说起&lt;/h3&gt;&lt;p&gt;之前的项目曾经遇到这样一个问题：&lt;/p&gt;
&lt;p&gt;在弱网环境下，几乎每次打开排行榜，都会出现小菊花（加载中），但是在wifi环境下则不会，初步猜测是数据包太大，导致加载速度慢。&lt;/p&gt;
&lt;p&gt;使用工具一查，进入排行榜，服务端返回的数据包居然达到了20KB，而我们的竞品，只有2.36KB。&lt;/p&gt;
&lt;h3 id=&quot;流量测试是什么&quot;&gt;&lt;a href=&quot;#流量测试是什么&quot; class=&quot;headerlink&quot; title=&quot;流量测试是什么&quot;&gt;&lt;/a&gt;流量测试是什么&lt;/h3&gt;&lt;p&gt;流量测试是安卓APP性能测试的其中一个专项，测试APP在联网环境下，网络流量的消耗情况。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;流量测试怎么做&quot;&gt;&lt;a href=&quot;#流量测试怎么做&quot; class=&quot;headerlink&quot; title=&quot;流量测试怎么做&quot;&gt;&lt;/a&gt;流量测试怎么做&lt;/h3&gt;&lt;p&gt;使用过以下几种方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;通过Adb获取流量数据，TesterHome上的一篇文章有详细的讲述，就不再重复了，&lt;a href=&quot;https://testerhome.com/topics/2643&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击访问&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用tcpdump抓包，使用wireshark分析。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用性能测试工具GT，Wetest，Emmagee，记录流量数据后，导出查看。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在游戏代码中打印，汇总流量数据。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;最简单有效的方式&quot;&gt;&lt;a href=&quot;#最简单有效的方式&quot; class=&quot;headerlink&quot; title=&quot;最简单有效的方式&quot;&gt;&lt;/a&gt;最简单有效的方式&lt;/h3&gt;&lt;p&gt;使用GT这类成熟的性能测试工具，可以直接生成csv文件导出，或者在云端通过图表形式展示。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;		transmitted	received&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;min		&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;		&lt;span class=&quot;number&quot;&gt;108&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;max		&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;		&lt;span class=&quot;number&quot;&gt;137&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;avg		&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;		&lt;span class=&quot;number&quot;&gt;132&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;15.2&lt;/span&gt;	&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;		&lt;span class=&quot;number&quot;&gt;108&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;16.4&lt;/span&gt;	&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;		&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;17.5&lt;/span&gt;	&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;		&lt;span class=&quot;number&quot;&gt;136&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;18.7&lt;/span&gt;	&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;		&lt;span class=&quot;number&quot;&gt;136&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19.8&lt;/span&gt;	&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;		&lt;span class=&quot;number&quot;&gt;137&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;21.0&lt;/span&gt;	&lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;		&lt;span class=&quot;number&quot;&gt;137&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不足之处，只是单纯记录每一秒的流量消耗，无法记录是什么操作产生的流量消耗。另外，如果同一秒中产生了多个请求，消耗的记录会积累到一起。&lt;/p&gt;
&lt;p&gt;tcpdump+wireshark可以精确到每一个请求产生的流量消耗，同样也无法直观知道具体是哪个操作。&lt;/p&gt;
&lt;h3 id=&quot;最精确直观的方式&quot;&gt;&lt;a href=&quot;#最精确直观的方式&quot; class=&quot;headerlink&quot; title=&quot;最精确直观的方式&quot;&gt;&lt;/a&gt;最精确直观的方式&lt;/h3&gt;&lt;p&gt;怎么样才能直观地查看每一个请求所属的操作呢？答案是自制一个流量统计工具。&lt;/p&gt;
&lt;p&gt;工具原理：&lt;/p&gt;
&lt;p&gt;在客户端代码内，每次请求发送与接收的时候，嵌入统计流量的代码，并汇总到一起，完成测试后，输出到文本上。&lt;/p&gt;
&lt;p&gt;保存流量数据的工具类&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public class TrafficCount &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private static Queue&amp;lt;string&amp;gt; trafficInfo = new Queue&amp;lt;string&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void Add(string s) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        trafficInfo.Enqueue(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public static void WriteToFile(string filePath) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        StreamWriter sw = new StreamWriter(filePath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        foreach(var i in trafficInfo) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            sw.WriteLine(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sw.Close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Debug.LogWarning(&amp;quot;成功保存&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在客户端发送请求和接收响应的地方加入流量统计(已发送请求为例，截取了部分代码，这里采用了硬编码的方式，其实不太合理)&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;SocketError error;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;var sended = mSocket.Send(output, SocketFlags.None, out error);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (error == SocketError.Success) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj.OK();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //统计代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.Debug(&amp;quot;成功发送 &amp;#123;0&amp;#125; 字节数据&amp;quot;, sended);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TrafficCount.Add(&amp;quot;成功发送&amp;quot;+ sended + &amp;quot;字节数据&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    //统计代码&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    obj.Error();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.Error(&amp;quot;发送数据失败: &amp;#123;0&amp;#125;&amp;quot;, error.ToString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在主场景上，挂一个MonoBehaviour脚本，来调用开始统计和保存文件&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;void OnGUI() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (GUI.Button(new Rect(0, (Screen.height/2), 50, 30), &amp;quot;流量测试&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	//监听发送请求和接收返回，获取操作的协议号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        EventHelper.Ins.Get&amp;lt;SystemEventGroup&amp;gt;().onRequest.AddHandler((ss, req) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Debug.Log(req.Protocol);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            TrafficCount.Add(req.Protocol.ToString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        EventHelper.Ins.Get&amp;lt;SystemEventGroup&amp;gt;().onResponse.AddHandler((ss, req) =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            Debug.Log(req.Protocol+&amp;quot;成功返回&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            TrafficCount.Add(req.Protocol + &amp;quot;成功返回&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (GUI.Button(new Rect(0, (Screen.height/2)+50, 50, 30), &amp;quot;保存&amp;quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        TrafficCount.WriteToFile(@&amp;quot;C:\VSTest\result.txt&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终输出的文本是：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;110101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;成功发送&lt;span class=&quot;number&quot;&gt;77&lt;/span&gt;字节数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;接收到了&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;字节数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;110101&lt;/span&gt;成功返回&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;107501&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;成功发送&lt;span class=&quot;number&quot;&gt;84&lt;/span&gt;字节数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;接收到了&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;字节数据&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;107501&lt;/span&gt;成功返回&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;怎么优化&quot;&gt;&lt;a href=&quot;#怎么优化&quot; class=&quot;headerlink&quot; title=&quot;怎么优化&quot;&gt;&lt;/a&gt;怎么优化&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;去除响应包的冗余内容，如排行榜只需要名称，所在工会，等级等数据，并不需要玩家阵型数据。&lt;/li&gt;
&lt;li&gt;有些系统，无需每次点击都请求最新数据，如排行榜，进入后第一次点击里边的各个榜单会请求数据，在退出排行榜之前，再次切换榜单，会读取旧数据，不再发送新请求。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;结论&quot;&gt;&lt;a href=&quot;#结论&quot; class=&quot;headerlink&quot; title=&quot;结论&quot;&gt;&lt;/a&gt;结论&lt;/h3&gt;&lt;p&gt;时间段内流量的总消耗测试，建议使用GT类的工具。&lt;/p&gt;
&lt;p&gt;具体协议的流量消耗测试，使用自制工具分析。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;从一个Bug说起&quot;&gt;&lt;a href=&quot;#从一个Bug说起&quot; class=&quot;headerlink&quot; title=&quot;从一个Bug说起&quot;&gt;&lt;/a&gt;从一个Bug说起&lt;/h3&gt;&lt;p&gt;之前的项目曾经遇到这样一个问题：&lt;/p&gt;
&lt;p&gt;在弱网环境下，几乎每次打开排行榜，都会出现小菊花（加载中），但是在wifi环境下则不会，初步猜测是数据包太大，导致加载速度慢。&lt;/p&gt;
&lt;p&gt;使用工具一查，进入排行榜，服务端返回的数据包居然达到了20KB，而我们的竞品，只有2.36KB。&lt;/p&gt;
&lt;h3 id=&quot;流量测试是什么&quot;&gt;&lt;a href=&quot;#流量测试是什么&quot; class=&quot;headerlink&quot; title=&quot;流量测试是什么&quot;&gt;&lt;/a&gt;流量测试是什么&lt;/h3&gt;&lt;p&gt;流量测试是安卓APP性能测试的其中一个专项，测试APP在联网环境下，网络流量的消耗情况。&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏测试" scheme="http://jianbing.github.io/tags/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>关于这个博客</title>
    <link href="http://jianbing.github.io/2016/04/07/about-blog/"/>
    <id>http://jianbing.github.io/2016/04/07/about-blog/</id>
    <published>2016-04-06T16:00:00.000Z</published>
    <updated>2016-04-09T14:14:52.151Z</updated>
    
    <content type="html">&lt;p&gt;时间还真是快，从上个月3号搭建好了这个博客，到今天，已经过了一个月了。&lt;/p&gt;
&lt;p&gt;来点闲聊吧~&lt;/p&gt;
&lt;h3 id=&quot;写博客的初衷&quot;&gt;&lt;a href=&quot;#写博客的初衷&quot; class=&quot;headerlink&quot; title=&quot;写博客的初衷&quot;&gt;&lt;/a&gt;写博客的初衷&lt;/h3&gt;&lt;p&gt;作为一枚游戏测试，有一个很明显的感受是，相对于软件测试，游戏测试圈子，学习资料稀缺许多，这几年自己也逐渐有了一些积累，在这里分享自己的一些学习经验，虽然路过的人应该会比较少，有缘就看看呗。&lt;/p&gt;
&lt;p&gt;之前的笔记都是记录在有道云笔记里边，只有自己看的缘故，所以比较懒，笔记往往写得比较片段化，不够系统和完整，在重新码字的过程中，会有新的思考和沉淀，也是对自己的一种提升。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;分享什么&quot;&gt;&lt;a href=&quot;#分享什么&quot; class=&quot;headerlink&quot; title=&quot;分享什么&quot;&gt;&lt;/a&gt;分享什么&lt;/h3&gt;&lt;p&gt;首先，手把手，一步一图的教程贴应该不多，这几年深有体会的一点是，最好的教程贴，往往都是官方的文档。&lt;/p&gt;
&lt;p&gt;在这里主要分享的是各种测试类型的个人心得和经验吧，哼哼，谁说游戏测试就是点点点，除了功能测试，我们还可以关注游戏的性能情况，接口测试，数据安全，游戏兼容性，测试环境配置，工具开发等等领域。&lt;/p&gt;
&lt;p&gt;还可以分享工作中对遇到的一些问题的解决思路，以及其中的重点步骤和踩过的坑。&lt;/p&gt;
&lt;p&gt;还有就是折腾一些测试工具和脚本的心得体会吧，以及学习一些开源库的流水账记录，最近已经成为Star狂魔了~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;时间还真是快，从上个月3号搭建好了这个博客，到今天，已经过了一个月了。&lt;/p&gt;
&lt;p&gt;来点闲聊吧~&lt;/p&gt;
&lt;h3 id=&quot;写博客的初衷&quot;&gt;&lt;a href=&quot;#写博客的初衷&quot; class=&quot;headerlink&quot; title=&quot;写博客的初衷&quot;&gt;&lt;/a&gt;写博客的初衷&lt;/h3&gt;&lt;p&gt;作为一枚游戏测试，有一个很明显的感受是，相对于软件测试，游戏测试圈子，学习资料稀缺许多，这几年自己也逐渐有了一些积累，在这里分享自己的一些学习经验，虽然路过的人应该会比较少，有缘就看看呗。&lt;/p&gt;
&lt;p&gt;之前的笔记都是记录在有道云笔记里边，只有自己看的缘故，所以比较懒，笔记往往写得比较片段化，不够系统和完整，在重新码字的过程中，会有新的思考和沉淀，也是对自己的一种提升。&lt;/p&gt;
    
    </summary>
    
    
      <category term="杂" scheme="http://jianbing.github.io/tags/%E6%9D%82/"/>
    
  </entry>
  
  <entry>
    <title>安卓上使用tcpdump抓包的几种方式</title>
    <link href="http://jianbing.github.io/2016/04/05/android-tcpdump/"/>
    <id>http://jianbing.github.io/2016/04/05/android-tcpdump/</id>
    <published>2016-04-04T16:00:00.000Z</published>
    <updated>2016-04-09T14:14:52.152Z</updated>
    
    <content type="html">&lt;p&gt;tcpdump是Linux上强大的网络数据采集工具，可以将网络中传送的数据包完全截获下来，在安卓手机上，也可以使用它来进行抓包，后续可以用Wireshark来进行数据包的分析。&lt;/p&gt;
&lt;p&gt;分享一下在安卓使用tcpdump抓包的几种方式&lt;/p&gt;
&lt;h3 id=&quot;1-通过GT的tcpdump插件&quot;&gt;&lt;a href=&quot;#1-通过GT的tcpdump插件&quot; class=&quot;headerlink&quot; title=&quot;1.通过GT的tcpdump插件&quot;&gt;&lt;/a&gt;1.通过GT的tcpdump插件&lt;/h3&gt;&lt;p&gt;这个是最简单粗暴的好方法~&lt;/p&gt;
&lt;p&gt;GT是腾讯出品的APP性能测试工具，已经在&lt;a href=&quot;https://github.com/TencentOpen/GT&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;开源。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入GT的插件页面，点击抓包，调整tcpdump参数（一般默认即可），点击开始&lt;/li&gt;
&lt;li&gt;切换到要抓包的应用，操作完成后，切换回GT，停止抓包即可。&lt;/li&gt;
&lt;li&gt;抓包后生成pcap文件，用adb pull导出。&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;2-adb调用tcpdump&quot;&gt;&lt;a href=&quot;#2-adb调用tcpdump&quot; class=&quot;headerlink&quot; title=&quot;2.adb调用tcpdump&quot;&gt;&lt;/a&gt;2.adb调用tcpdump&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在tcpdump官网下载最新版本，&lt;a href=&quot;http://www.androidtcpdump.com/android-tcpdump/downloads&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;点击进入&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;手机需要提前root&lt;/li&gt;
&lt;li&gt;在cmd命令行下，依次执行&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb shell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;su &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod &lt;span class=&quot;number&quot;&gt;777&lt;/span&gt; /data/local&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;退出shell模式，把下载的tcpdump文件push到手机&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb push E:/tcpdump /data/local&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;在cmd下，依次执行&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb shell&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;su&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod &lt;span class=&quot;number&quot;&gt;6755&lt;/span&gt; /data/local/tcpdump&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/data/local/tcpdump -p -s &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -w /sdcard/&lt;span class=&quot;number&quot;&gt;001.&lt;/span&gt;pcap     开始抓包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;参数含义：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-p 表示不使用混杂模式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-s 参数用以指定数据包捕获长度，此处指定为&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;，指抓取完整的数据包&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-w 将结果写入一个pcap文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;按Ctrl+C停止抓包，把pcap文件pull回本地&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb pull /sdcard/&lt;span class=&quot;number&quot;&gt;001.&lt;/span&gt;pcap E:/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;3-手机上使用终端模拟器&quot;&gt;&lt;a href=&quot;#3-手机上使用终端模拟器&quot; class=&quot;headerlink&quot; title=&quot;3.手机上使用终端模拟器&quot;&gt;&lt;/a&gt;3.手机上使用终端模拟器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;下载tcpdump，push到手机，这个和上边是一样的&lt;/li&gt;
&lt;li&gt;手机上安装终端模拟器&lt;/li&gt;
&lt;li&gt;运行终端模拟器，输入抓包命令&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/data/local/tcpdump -p -s &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; -w /sdcard/&lt;span class=&quot;number&quot;&gt;001.&lt;/span&gt;pcap&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;直接退出终端模拟器可以停止抓包，然后用adb pull导出&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;tcpdump是Linux上强大的网络数据采集工具，可以将网络中传送的数据包完全截获下来，在安卓手机上，也可以使用它来进行抓包，后续可以用Wireshark来进行数据包的分析。&lt;/p&gt;
&lt;p&gt;分享一下在安卓使用tcpdump抓包的几种方式&lt;/p&gt;
&lt;h3 id=&quot;1-通过GT的tcpdump插件&quot;&gt;&lt;a href=&quot;#1-通过GT的tcpdump插件&quot; class=&quot;headerlink&quot; title=&quot;1.通过GT的tcpdump插件&quot;&gt;&lt;/a&gt;1.通过GT的tcpdump插件&lt;/h3&gt;&lt;p&gt;这个是最简单粗暴的好方法~&lt;/p&gt;
&lt;p&gt;GT是腾讯出品的APP性能测试工具，已经在&lt;a href=&quot;https://github.com/TencentOpen/GT&quot;&gt;Github&lt;/a&gt;开源。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入GT的插件页面，点击抓包，调整tcpdump参数（一般默认即可），点击开始&lt;/li&gt;
&lt;li&gt;切换到要抓包的应用，操作完成后，切换回GT，停止抓包即可。&lt;/li&gt;
&lt;li&gt;抓包后生成pcap文件，用adb pull导出。&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="游戏测试" scheme="http://jianbing.github.io/tags/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>分享一个工具类库</title>
    <link href="http://jianbing.github.io/2016/03/29/share-test-library/"/>
    <id>http://jianbing.github.io/2016/03/29/share-test-library/</id>
    <published>2016-03-28T16:00:00.000Z</published>
    <updated>2016-05-21T15:28:25.498Z</updated>
    
    <content type="html">&lt;p&gt;简单整理了下，把平时测试工作中用到的工具类库放到&lt;a href=&quot;https://github.com/jianbing/utils&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;上了。&lt;/p&gt;
&lt;p&gt;平时也是一个人折腾，写的也比较随意（哈哈，其实是新手水平了）。&lt;/p&gt;
&lt;p&gt;简单介绍一下各个文件的主要内容：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;utils&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    android.py       主要是常用adb命令的封装&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    common.py        公共函数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    decorators.py    自己常用的一些装饰器&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    cmdtool          封装了一个简单的命令行工具&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tools            几个工具类&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        monitor.py       安卓app的CPU，内存占用情况的监视器，支持内存占用达到指定值的时候自动截图&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        biplist.py       在Github上淘到，可以解析IPA安装包里边的plist文件&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sftpclient.py    基于paramiko简单封装的sftp客户端，平时主要用来下载内网配置表，看看发版时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        minipb.py   	 某天写着玩的迷你进度条&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        taskcenter.py    多线程池&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        adb.py           adb工具类&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;简单整理了下，把平时测试工作中用到的工具类库放到&lt;a href=&quot;https://github.com/jianbing/utils&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github&lt;/a&gt;上了。&lt;/p&gt;
&lt;p&gt;平时也是一个人折腾，写的也比较随意
    
    </summary>
    
    
      <category term="测试工具" scheme="http://jianbing.github.io/tags/%E6%B5%8B%E8%AF%95%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>游戏测试之接口工具篇（下篇）</title>
    <link href="http://jianbing.github.io/2016/03/27/interface-test-tool-2/"/>
    <id>http://jianbing.github.io/2016/03/27/interface-test-tool-2/</id>
    <published>2016-03-26T16:00:00.000Z</published>
    <updated>2016-04-29T16:49:57.576Z</updated>
    
    <content type="html">&lt;p&gt;上一篇分享了在做接口测试时，用到的一些工具软件，最终的感觉是，能用，但不顺手。最主要的原因是，发送请求后，没法很直观地查看服务端的返回结果，其次是使用起来，工作效率并不理想。&lt;/p&gt;
&lt;p&gt;在经历的几个项目中，最终都是使用了内部开发的接口工具，而每个项目的接口工具的原理和使用方式区别还挺大，在此分享下各个工具的设计思路。&lt;/p&gt;
&lt;h3 id=&quot;项目1&quot;&gt;&lt;a href=&quot;#项目1&quot; class=&quot;headerlink&quot; title=&quot;项目1&quot;&gt;&lt;/a&gt;项目1&lt;/h3&gt;&lt;p&gt;2011年那会，刚刚从学校踏入测试坑，项目是一个SLG页游，前后端使用Socket通讯，数据交互采用Json格式，最初版本的接口测试是用WPE做的，后来服务端的主程MM在内网开了一个Web端口，可以接收Http Get请求，格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://192.168.22.248/sftx/gameSocket/send?u=playerId&amp;amp;c=protocol&amp;amp;p=port&amp;amp;params=param1|param2|param3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;参数的含义如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;u：玩家ID&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c：操作协议号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p：服务器端口号&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;params：参数列表，多个参数使用&lt;span class=&quot;string&quot;&gt;&quot;|&quot;&lt;/span&gt;连接&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;举个栗子：玩家升级主城&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;玩家ID：&lt;span class=&quot;number&quot;&gt;7001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;操作是升级主城：协议号&lt;span class=&quot;number&quot;&gt;110001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;参数列表：主城建筑ID是&lt;span class=&quot;number&quot;&gt;1001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;内网端口号：默认&lt;span class=&quot;number&quot;&gt;5001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所以相应的Get请求是&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://192.168.22.248/sftx/gameSocket/send?u=7001&amp;amp;c=110001&amp;amp;p=5001&amp;amp;params=1001&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把这个Get请求发送过去后，Web服务器会解析出相应的玩家ID，操作协议，参数列表，自动开启一个Socket连入内网游戏服务器，执行相应的操作，并返回处理结果。&lt;/p&gt;
&lt;p&gt;从此脱离了WPE，当时是用PHP围绕这个Web接口，做了一个调用页面，也实现了请求的新建，修改，分类保存，批量发送，并解析返回结果。&lt;/p&gt;
&lt;p&gt;基于这个接口，也实现了一些自动化的批量操作，如批量建号，批量升级等，对工作效率的提升也是很明显的，比如新建军团后，跑个批量申请入团，军团就满人了。&lt;/p&gt;
&lt;p&gt;这个模式的不足之处：发送请求后，因为Web那边会自行创建新的Socket连接，会自动挤号。&lt;/p&gt;
&lt;h3 id=&quot;项目2&quot;&gt;&lt;a href=&quot;#项目2&quot; class=&quot;headerlink&quot; title=&quot;项目2&quot;&gt;&lt;/a&gt;项目2&lt;/h3&gt;&lt;p&gt;项目2是一个RPG页游，前后端使用Socket通讯，数据交互格式是AMF3。&lt;/p&gt;
&lt;p&gt;当时后端底层在重写ing，所以没空折腾一个Web端口给我调用~这个时候前端主程FF站了出来，提出了一个方案。&lt;/p&gt;
&lt;p&gt;游戏在网页上加载的时候，同时也加载一个测试用的js文件。&lt;/p&gt;
&lt;p&gt;执行接口测试的方式，是在Chrome的console窗口，输入已经加载的js函数sendCommand，把操作内容作为函数的参数，回车运行后发送给Flash客户端，Flash客户端接收后，解析出相应的操作ID和参数列表，执行后在console窗口打印出服务端返回结果。&lt;/p&gt;
&lt;p&gt;函数调用格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sendCommand(“PackagesController”, “move”, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, [“BACKPACK”,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,“BACKPACK”,&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;操作模块：PackagesController  背包模块&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;操作行为：move   移动背包物品&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;参数列表：[“BACKPACK”,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,“BACKPACK”,&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;]   从第&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;个格子移动到第&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;个&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个模式的一个好处：接口测试的请求是前端解析后，自行发出的，所以不会被挤号。&lt;/p&gt;
&lt;h3 id=&quot;项目3&quot;&gt;&lt;a href=&quot;#项目3&quot; class=&quot;headerlink&quot; title=&quot;项目3&quot;&gt;&lt;/a&gt;项目3&lt;/h3&gt;&lt;p&gt;项目3是一个回合制的RPG手游，客户端使用Unity，Socket通讯，数据交互格式是PB，作为工作室的第一款手游，这次前后端主程都一直很忙，接口工具在项目前期一直没有落实下来。中间也一度是用WPE和烧饼顶着先大概测下接口。&lt;/p&gt;
&lt;p&gt;随着两个项目以来的一些积累，这次开始自己尝试独立完成接口工具，工具需求规划如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;支持录制请求&lt;/li&gt;
&lt;li&gt;可以对录制的请求进行复制，删除&lt;/li&gt;
&lt;li&gt;解析请求里边的参数列表&lt;/li&gt;
&lt;li&gt;查看服务端的返回结果&lt;/li&gt;
&lt;li&gt;自动校验返回结果&lt;/li&gt;
&lt;li&gt;测试用例保存到本地&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现过程中的一些积累在此记录下：&lt;/p&gt;
&lt;h3 id=&quot;录制的原理&quot;&gt;&lt;a href=&quot;#录制的原理&quot; class=&quot;headerlink&quot; title=&quot;录制的原理&quot;&gt;&lt;/a&gt;录制的原理&lt;/h3&gt;&lt;p&gt;点击一个技能升级的按钮的背后发生了什么？&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;UI接收到点击请求，调用技能模块&lt;/li&gt;
&lt;li&gt;技能模块准备好参数列表，调用Server层的Send方法，生成一个请求&lt;/li&gt;
&lt;li&gt;Server层接收后，对请求进行封装，加入校验key和请求头，压缩为PB格式，生成最终请求&lt;/li&gt;
&lt;li&gt;发送给服务端&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;那么，要从哪里切入来录制请求呢？最终选择了在Server层接收后，对请求进行封装前，主要原因是，接口测试主要关注参数的不合理修改后，服务端能否做出正确判断，可以不用关心校验Key等其他信息，对请求进行修改后，点击发送，直接调用Send方法，底层就会完成新的请求封装和发送。省代码啊~&lt;/p&gt;
&lt;p&gt;于是乎，现在的问题是，录制的代码加在哪里？&lt;/p&gt;
&lt;p&gt;这个项目采用的方式，是直接在Send函数里边，嵌入了转存请求的代码。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Send&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; controllerID, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; handlerID, IEnumerable&amp;lt;object&amp;gt; paramList, Action&amp;lt;GodResponse&amp;gt; callback)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 煎饼加入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	TestCenter.AddRequest(&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TRequest(controllerID, handlerID, paramList, callback));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 煎饼加入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	var request = CreateRequest(controllerID, handlerID, paramList, callback);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	SendRequest(request);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; request.ID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;TRequest的定义&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Serializable]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class TRequest :ICloneable &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int controllerID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int handlerID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    IEnumerable&amp;lt;object&amp;gt; paramList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Action&amp;lt;GodResponse&amp;gt; callback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public TRequest(int controllerID, int handlerID, IEnumerable&amp;lt;object&amp;gt; paramList, Action&amp;lt;GodResponse&amp;gt; callback) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.controllerID = controllerID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.handlerID = handlerID;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.paramList = paramList;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        this.callback = callback;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public object Clone() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        MemoryStream stream = new MemoryStream();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BinaryFormatter formatter = new BinaryFormatter();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        formatter.Serialize(stream, this);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        stream.Position = 0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        return formatter.Deserialize(stream);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个做法其实不合理，因为我们项目的测试代码并不提交到项目的代码库，每次更新代码，都会出现冲突，更合理的方式是前端提供一个发送请求的事件，测试代码这边进行监听（下个项目已使用这种方式）。&lt;/p&gt;
&lt;h3 id=&quot;测试工具UI&quot;&gt;&lt;a href=&quot;#测试工具UI&quot; class=&quot;headerlink&quot; title=&quot;测试工具UI&quot;&gt;&lt;/a&gt;测试工具UI&lt;/h3&gt;&lt;p&gt;UI界面选择了Unity古老的OnGUI方法，原因就是：易学，够用。下边是一个简单的GUI界面。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;using UnityEngine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class TestUI : MonoBehaviour &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    private Rect windowRect = new Rect(Screen.width * 0.25f, 0, Screen.width / 2, Screen.height - 10);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public Vector2 scrollPosition = Vector2.zero;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void OnGUI() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            windowRect = GUI.Window(0, windowRect, WindowFunction, &quot;接口测试工具&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    void WindowFunction(int windowID) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GUI.DragWindow(new Rect(0, 0, Screen.width/2, 30));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GUI.Box(new Rect(0,0,Screen.width,Screen.height),&quot;&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GUILayout.BeginArea(new Rect(5, 20, Screen.width / 2-20, Screen.height));       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        scrollPosition = GUILayout.BeginScrollView(scrollPosition,GUILayout.Width(Screen.width / 2 - 20),GUILayout.Height(Screen.height-60));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        // 在这里请求列表解析&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GUILayout.EndScrollView();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GUILayout.BeginHorizontal();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (GUILayout.Button(&quot;统计数量&quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (GUILayout.Button(&quot;清空记录&quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (GUILayout.Button(&quot;录制&quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        if (GUILayout.Button(&quot;停止&quot;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GUILayout.EndHorizontal();        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        GUILayout.EndArea(); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/test-tool/pic1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;参数列表解析&quot;&gt;&lt;a href=&quot;#参数列表解析&quot; class=&quot;headerlink&quot; title=&quot;参数列表解析&quot;&gt;&lt;/a&gt;参数列表解析&lt;/h3&gt;&lt;p&gt;参数列表是一个object类型的数组，所以里边可以放各种基础类型，解析的时候，需要用到反射，动态修改里边的内容，解析函数如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ParseBaseType2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(object aParam, object aList, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           GUILayout.BeginHorizontal();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           Type paramType = aParam.GetType();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (paramType == typeof(string)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               GUILayout.Label(&lt;span class=&quot;string&quot;&gt;&quot;String&quot;&lt;/span&gt;, GUILayout.Width(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               aParam = GUILayout.TextField(aParam.ToString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (paramType == typeof(&lt;span class=&quot;keyword&quot;&gt;short&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               GUILayout.Label(&lt;span class=&quot;string&quot;&gt;&quot;Short&quot;&lt;/span&gt;, GUILayout.Width(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               aParam = Convert.ToInt16(GUILayout.TextField(aParam.ToString()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (paramType == typeof(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               GUILayout.Label(&lt;span class=&quot;string&quot;&gt;&quot;Int&quot;&lt;/span&gt;, GUILayout.Width(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               aParam = Convert.ToInt32(GUILayout.TextField(aParam.ToString()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (paramType == typeof(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               GUILayout.Label(&lt;span class=&quot;string&quot;&gt;&quot;Long&quot;&lt;/span&gt;, GUILayout.Width(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               aParam = Convert.ToInt64(GUILayout.TextField(aParam.ToString()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (paramType == typeof(bool)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               GUILayout.Label(&lt;span class=&quot;string&quot;&gt;&quot;Bool&quot;&lt;/span&gt;, GUILayout.Width(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               aParam = Convert.ToBoolean(GUILayout.TextField(aParam.ToString()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               GUILayout.Label(&lt;span class=&quot;string&quot;&gt;&quot;type can not parse,type is &quot;&lt;/span&gt; + paramType.Name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               GUILayout.EndHorizontal();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           var removeAtMethod = aList.GetType().GetMethod(&lt;span class=&quot;string&quot;&gt;&quot;RemoveAt&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           removeAtMethod.Invoke(aList, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; object[] &amp;#123; index &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           var insertMethod = aList.GetType().GetMethod(&lt;span class=&quot;string&quot;&gt;&quot;Insert&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           insertMethod.Invoke(aList, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; object[] &amp;#123; index, aParam &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           GUILayout.EndHorizontal();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最终成品图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/test-tool/pic2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;项目4&quot;&gt;&lt;a href=&quot;#项目4&quot; class=&quot;headerlink&quot; title=&quot;项目4&quot;&gt;&lt;/a&gt;项目4&lt;/h3&gt;&lt;p&gt;SLG手游，依旧Socket通讯，依旧PB。&lt;/p&gt;
&lt;p&gt;在上一个接口工具的基础上，新增了：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;更详细的用例设计和用例库的读取和保存（使用C#的序列化）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;增加自动化接口测试模块，测试结果通过Http请求发送到Web服务器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;增加一个Web服务器接收测试结果并进行统计（使用Flask搭建），测试结果用图表形式展示（Echarts）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Coding，Coding~&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;上一篇分享了在做接口测试时，用到的一些工具软件，最终的感觉是，能用，但不顺手。最主要的原因是，发送请求后，没法很直观地查看服务端的返回结果，其次是使用起来，工作效率并不理想。&lt;/p&gt;
&lt;p&gt;在经历的几个项目中，最终都是使用了内部开发的接口工具，而每个项目的接口工具的原理和使用方式区别还挺大，在此分享下各个工具的设计思路。&lt;/p&gt;
&lt;h3 id=&quot;项目1&quot;&gt;&lt;a href=&quot;#项目1&quot; class=&quot;headerlink&quot; title=&quot;项目1&quot;&gt;&lt;/a&gt;项目1&lt;/h3&gt;&lt;p&gt;2011年那会，刚刚从学校踏入测试坑，项目是一个SLG页游，前后端使用Socket通讯，数据交互采用Json格式，最初版本的接口测试是用WPE做的，后来服务端的主程MM在内网开了一个Web端口，可以接收Http Get请求，格式如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://192.168.22.248/sftx/gameSocket/send?u=playerId&amp;amp;c=protocol&amp;amp;p=port&amp;amp;params=param1|param2|param3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="游戏测试" scheme="http://jianbing.github.io/tags/%E6%B8%B8%E6%88%8F%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
